{"version":3,"sources":["../src/datasource.js"],"names":["_","OpenHistorianDataSource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","dataFlags","jsonData","flags","options","includedDataFlags","Included","undefined","excludedDataFlags","Excluded","includeNormalData","IncludeNormal","query","buildQueryParameters","targets","filter","t","hide","JSON","parse","stringify","queryOptions","Normal","length","Promise","resolve","data","datasourceRequest","method","headers","then","response","status","message","title","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","result","interpolated","target","mapToTextValue","map","d","i","text","value","_this","refId","queryType"],"mappings":"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","file":"datasource.js","sourcesContent":["//******************************************************************************************************\r\n//  datasource.js - Gbtc\r\n//\r\n//  Copyright ï¿½ 2017, Grid Protection Alliance.  All Rights Reserved.\r\n//\r\n//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See\r\n//  the NOTICE file distributed with this work for additional information regarding copyright ownership.\r\n//  The GPA licenses this file to you under the MIT License (MIT), the \"License\"; you may not use this\r\n//  file except in compliance with the License. You may obtain a copy of the License at:\r\n//\r\n//      http://opensource.org/licenses/MIT\r\n//\r\n//  Unless agreed to in writing, the subject software distributed under the License is distributed on an\r\n//  \"AS-IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the\r\n//  License for the specific language governing permissions and limitations.\r\n//\r\n//  Code Modification History:\r\n//  ----------------------------------------------------------------------------------------------------\r\n//  10/30/2017 - Billy Ernest\r\n//       Generated original version of source code.\r\n//\r\n//******************************************************************************************************\r\n\r\nimport _ from \"lodash\";\r\n\r\nexport class OpenHistorianDataSource {\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\r\n    this.type = instanceSettings.type;\r\n    this.url = instanceSettings.url;\r\n    this.name = instanceSettings.name;\r\n    this.q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.dataFlags = instanceSettings.jsonData.flags;\r\n    this.options = {\r\n         includedDataFlags: (instanceSettings.jsonData.Included == undefined ? 0xFFFFFFFF : instanceSettings.jsonData.Included), \r\n         excludedDataFlags: (instanceSettings.jsonData.Excluded == undefined ? 0x00000000 : instanceSettings.jsonData.Excluded),\r\n         includeNormalData: (instanceSettings.jsonData.IncludeNormal == undefined ? true : instanceSettings.jsonData.IncludeNormal)\r\n    }\r\n  }\r\n\r\n  query(options) {\r\n    var query = this.buildQueryParameters(options);\r\n    query.targets = query.targets.filter(function (t) {\r\n      return !t.hide;\r\n    });\r\n\r\n    query.options = JSON.parse(JSON.stringify(this.options));\r\n\r\n    if(options.targets[0].queryOptions != undefined){\r\n        query.options.includedDataFlags = (options.targets[0].queryOptions.Included != undefined ? options.targets[0].queryOptions.Included : query.options.includedDataFlags );\r\n        query.options.excludedDataFlags = (options.targets[0].queryOptions.Excluded != undefined ? options.targets[0].queryOptions.Excluded : query.options.excludedDataFlags );\r\n        query.options.includeNormalData = (options.targets[0].queryOptions.Normal != undefined ? options.targets[0].queryOptions.Normal : query.options.includeNormalData );\r\n\r\n    }\r\n\r\n\r\n    if (query.targets.length <= 0) {\r\n      return Promise.resolve({ data: [] });\r\n    }\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/query',\r\n      data: query,\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  testDatasource() {\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/',\r\n      method: 'GET'\r\n    }).then(function (response) {\r\n      if (response.status === 200) {\r\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\r\n      }\r\n    });\r\n  }\r\n\r\n  annotationQuery(options) {\r\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\r\n    var annotationQuery = {\r\n      range: options.range,\r\n      annotation: {\r\n        name: options.annotation.name,\r\n        datasource: options.annotation.datasource,\r\n        enable: options.annotation.enable,\r\n        iconColor: options.annotation.iconColor,\r\n        query: query\r\n      },\r\n      rangeRaw: options.rangeRaw\r\n    };\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/annotations',\r\n      method: 'POST',\r\n      data: annotationQuery\r\n    }).then(function (result) {\r\n      return result.data;\r\n    });\r\n  }\r\n\r\n  metricFindQuery(options) {\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/search',\r\n      data: interpolated,\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(this.mapToTextValue);\r\n  }\r\n\r\n  whereFindQuery(options) {\r\n\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchFields',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n  mapToTextValue(result) {\r\n    return _.map(result.data, function (d, i) {\r\n      return { text: d, value: i };\r\n    });\r\n  }\r\n\r\n  buildQueryParameters(options) {\r\n    var _this = this;\r\n\r\n    //remove placeholder targets\r\n    options.targets = _.filter(options.targets, function (target) {\r\n      return target.target !== 'select metric';\r\n    });\r\n\r\n    var targets = _.map(options.targets, function (target) {\r\n      return {\r\n        target: _this.templateSrv.replace(target.target),\r\n        refId: target.refId,\r\n        hide: target.hide, \r\n        queryType: target.queryType,\r\n        queryOptions: target.queryOptions\r\n      };\r\n    });\r\n\r\n    options.targets = targets;\r\n\r\n    return options;\r\n  }\r\n\r\n  filterFindQuery() {\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchFilters',\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n  phasorFindQuery(options) {\r\n\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchPhasors',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n\r\n  orderByFindQuery(options) {\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchOrderBys',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n  getMetaData(options) {\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/GetMetadata',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n  }\r\n}\r\n"]}