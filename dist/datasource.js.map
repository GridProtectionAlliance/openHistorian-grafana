{"version":3,"sources":["../src/datasource.js"],"names":["_","OpenHistorianDataSource","instanceSettings","$q","backendSrv","templateSrv","uiSegmentSrv","type","url","name","q","dataFlags","jsonData","flags","options","includedDataFlags","Included","undefined","excludedDataFlags","Excluded","includeNormalData","IncludeNormal","each","targets","element","index","list","queryType","setTargetWithElements","query","buildQueryParameters","filter","t","hide","JSON","parse","stringify","queryOptions","Normal","length","Promise","resolve","data","datasourceRequest","method","headers","then","response","status","message","title","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","result","interpolated","target","mapToTextValue","map","d","i","text","value","_this","refId","wheres","filterSegment","topn","topNSegment","where","orderby","orderBys","functions","functionSegments","panelCtrl","refresh","buildFunctionArray","functionsString","ctrl","segments","a","variableExists","replaceWithText","join","newElement","newSegment","Function","Type","push","operator","newOperator","Parameters","param","j","newFake","Default","toString","Description","Index","newCondition"],"mappings":"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","file":"datasource.js","sourcesContent":["//******************************************************************************************************\r\n//  datasource.js - Gbtc\r\n//\r\n//  Copyright � 2017, Grid Protection Alliance.  All Rights Reserved.\r\n//\r\n//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See\r\n//  the NOTICE file distributed with this work for additional information regarding copyright ownership.\r\n//  The GPA licenses this file to you under the MIT License (MIT), the \"License\"; you may not use this\r\n//  file except in compliance with the License. You may obtain a copy of the License at:\r\n//\r\n//      http://opensource.org/licenses/MIT\r\n//\r\n//  Unless agreed to in writing, the subject software distributed under the License is distributed on an\r\n//  \"AS-IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the\r\n//  License for the specific language governing permissions and limitations.\r\n//\r\n//  Code Modification History:\r\n//  ----------------------------------------------------------------------------------------------------\r\n//  10/30/2017 - Billy Ernest\r\n//       Generated original version of source code.\r\n//\r\n//******************************************************************************************************\r\n\r\nimport _ from \"lodash\";\r\n\r\nexport class OpenHistorianDataSource {\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv, uiSegmentSrv) {\r\n    this.type = instanceSettings.type;\r\n    this.url = instanceSettings.url;\r\n    this.name = instanceSettings.name;\r\n    this.q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n\r\n    this.dataFlags = instanceSettings.jsonData.flags;\r\n    this.options = {\r\n         includedDataFlags: (instanceSettings.jsonData.Included == undefined ? 0xFFFFFFFF : instanceSettings.jsonData.Included), \r\n         excludedDataFlags: (instanceSettings.jsonData.Excluded == undefined ? 0x00000000 : instanceSettings.jsonData.Excluded),\r\n         includeNormalData: (instanceSettings.jsonData.IncludeNormal == undefined ? true : instanceSettings.jsonData.IncludeNormal)\r\n    }\r\n  }\r\n\r\n  query(options) {\r\n\r\n      _.each(options.targets, (element, index, list) => {\r\n          if (element.queryType == 'Element List')\r\n              this.setTargetWithElements(element);\r\n      });\r\n\r\n    var query = this.buildQueryParameters(options);\r\n    query.targets = query.targets.filter(function (t) {\r\n      return !t.hide;\r\n    });\r\n\r\n    query.options = JSON.parse(JSON.stringify(this.options));\r\n\r\n    if(options.targets[0].queryOptions != undefined){\r\n        query.options.includedDataFlags = (options.targets[0].queryOptions.Included != undefined ? options.targets[0].queryOptions.Included : query.options.includedDataFlags );\r\n        query.options.excludedDataFlags = (options.targets[0].queryOptions.Excluded != undefined ? options.targets[0].queryOptions.Excluded : query.options.excludedDataFlags );\r\n        query.options.includeNormalData = (options.targets[0].queryOptions.Normal != undefined ? options.targets[0].queryOptions.Normal : query.options.includeNormalData );\r\n\r\n    }\r\n\r\n\r\n    if (query.targets.length <= 0) {\r\n      return Promise.resolve({ data: [] });\r\n    }\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/query',\r\n      data: query,\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n\r\n  testDatasource() {\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/',\r\n      method: 'GET'\r\n    }).then(function (response) {\r\n      if (response.status === 200) {\r\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\r\n      }\r\n    });\r\n  }\r\n\r\n  annotationQuery(options) {\r\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\r\n    var annotationQuery = {\r\n      range: options.range,\r\n      annotation: {\r\n        name: options.annotation.name,\r\n        datasource: options.annotation.datasource,\r\n        enable: options.annotation.enable,\r\n        iconColor: options.annotation.iconColor,\r\n        query: query\r\n      },\r\n      rangeRaw: options.rangeRaw\r\n    };\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/annotations',\r\n      method: 'POST',\r\n      data: annotationQuery\r\n    }).then(function (result) {\r\n      return result.data;\r\n    });\r\n  }\r\n\r\n  metricFindQuery(options) {\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/search',\r\n      data: interpolated,\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }).then(this.mapToTextValue);\r\n  }\r\n\r\n  whereFindQuery(options) {\r\n\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchFields',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n  mapToTextValue(result) {\r\n    return _.map(result.data, function (d, i) {\r\n      return { text: d, value: i };\r\n    });\r\n  }\r\n\r\n  buildQueryParameters(options) {\r\n    var _this = this;\r\n\r\n    //remove placeholder targets\r\n    options.targets = _.filter(options.targets, function (target) {\r\n      return target.target !== 'select metric';\r\n    });\r\n\r\n    var targets = _.map(options.targets, function (target) {\r\n      return {\r\n        target: _this.templateSrv.replace(target.target),\r\n        refId: target.refId,\r\n        hide: target.hide, \r\n        queryType: target.queryType,\r\n        queryOptions: target.queryOptions\r\n      };\r\n    });\r\n\r\n    options.targets = targets;\r\n\r\n    return options;\r\n  }\r\n\r\n  filterFindQuery() {\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchFilters',\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n  phasorFindQuery(options) {\r\n\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchPhasors',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n\r\n  orderByFindQuery(options) {\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/SearchOrderBys',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      }).then(this.mapToTextValue);\r\n  }\r\n\r\n  getMetaData(options) {\r\n      var interpolated = {\r\n          target: this.templateSrv.replace(options, null, 'regex')\r\n      };\r\n\r\n      return this.backendSrv.datasourceRequest({\r\n          url: this.url + '/GetMetadata',\r\n          data: interpolated,\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n  }\r\n\r\n  // #region Target Compilation\r\n  setTargetWithQuery() {\r\n      if (this.wheres.length == 0) return;\r\n      var filter = this.filterSegment.value + ' ';\r\n      var topn = (this.topNSegment ? 'TOP ' + this.topNSegment + ' ' : '');\r\n      var where = 'WHERE ';\r\n\r\n      _.each(this.wheres, function (element, index, list) {\r\n          where += element.value + ' '\r\n      });\r\n\r\n      var orderby = '';\r\n      _.each(this.orderBys, function (element, index, list) {\r\n          orderby += (index == 0 ? 'ORDER BY ' : '') + element.value + (element.type == 'condition' && index < list.length - 1 ? ',' : '') + ' ';\r\n      });\r\n\r\n      var query = 'FILTER ' + topn + filter + where + orderby;\r\n      var functions = '';\r\n\r\n      _.each(this.functions, function (element, index, list) {\r\n          if (element.value == 'QUERY') functions += query;\r\n          else functions += element.value;\r\n      });\r\n\r\n      this.target.target = (functions != \"\" ? functions : query);\r\n      this.target.topNSegment = this.topNSegment;\r\n      this.target.filterSegment = this.filterSegment;\r\n      this.target.orderBys = this.orderBys;\r\n      this.target.wheres = this.wheres;\r\n      this.target.functionSegments = this.functionSegments;\r\n      this.target.queryType = this.queryType;\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  setTargetWithElements(target) {\r\n      var functions = this.buildFunctionArray(target);\r\n      var functionsString = ''\r\n      var ctrl = this;\r\n      _.each(functions, function (element, index, list) {\r\n          if (element.value == 'QUERY') functionsString += target.segments.map(function (a) {\r\n              if (ctrl.templateSrv.variableExists(a.text)) {\r\n                  return ctrl.templateSrv.replaceWithText(a.text);\r\n              }\r\n              else\r\n                  return a.value\r\n          }).join(';')\r\n          else if (ctrl.templateSrv.variableExists(element.value)) functionsString += ctrl.templateSrv.replaceWithText(element.text);\r\n          else functionsString += element.value;\r\n      });\r\n\r\n      target.target = (functionsString != \"\" ? functionsString : target.segments.map(function (a) {\r\n          if (ctrl.templateSrv.variableExists(a.text)) {\r\n              return ctrl.templateSrv.replaceWithText(a.text);\r\n          }\r\n          else\r\n              return a.value\r\n      }).join(';'));\r\n      \r\n  }\r\n\r\n  buildFunctionArray(target) {\r\n      var ctrl = this;\r\n      var functions = [];\r\n\r\n      if (target.functionSegments.length == 0) return;\r\n\r\n      _.each(target.functionSegments, function (element, index, list) {\r\n          var newElement = ctrl.uiSegmentSrv.newSegment(element.Function)\r\n          newElement.Type = 'Function';\r\n          newElement.Function = element.Function;\r\n\r\n          functions.push(newElement)\r\n\r\n          if (newElement.value == 'Set' || newElement.value == 'Slice') return;\r\n\r\n          var operator = ctrl.uiSegmentSrv.newOperator('(');\r\n          operator.Type = 'Operator';\r\n          functions.push(operator);\r\n\r\n          _.each(element.Parameters, function (param, i, j) {\r\n              var d = ctrl.uiSegmentSrv.newFake(param.Default.toString());\r\n              d.Type = param.Type;\r\n              d.Function = element.Function;\r\n              d.Description = param.Description;\r\n              d.Index = i;\r\n              functions.push(d);\r\n\r\n              var operator = ctrl.uiSegmentSrv.newOperator(',');\r\n              operator.Type = 'Operator';\r\n              functions.push(operator);\r\n          });\r\n      });\r\n\r\n      var query = ctrl.uiSegmentSrv.newCondition('QUERY');\r\n      query.Type = 'Query';\r\n      functions.push(query);\r\n\r\n      for (var i in target.functionSegments) {\r\n          if (target.functionSegments[i].Function != 'Set' && target.functionSegments[i].Function != 'Slice') {\r\n              var operator = ctrl.uiSegmentSrv.newOperator(')');\r\n              operator.Type = 'Operator';\r\n              functions.push(operator);\r\n          }\r\n\r\n      }\r\n\r\n      return functions;\r\n\r\n  }\r\n\r\n\r\n  // #endregion\r\n\r\n}\r\n"]}