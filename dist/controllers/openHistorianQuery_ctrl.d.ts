import { QueryCtrl } from 'app/plugins/sdk';
export declare class OpenHistorianDataSourceQueryCtrl extends QueryCtrl {
    private $scope;
    private $injector;
    private uiSegmentSrv;
    private templateSrv;
    private $compile;
    static templateUrl: string;
    segments: Array<any>;
    queryTypes: Array<string>;
    queryType: string;
    wheres: Array<any>;
    functionSegments: Array<any>;
    topNSegment: number;
    functions: Array<any>;
    orderBys: Array<any>;
    elementSegment: any;
    whereSegment: any;
    filterSegment: any;
    orderBySegment: any;
    functionSegment: any;
    typingTimer: any;
    constructor($scope: any, $injector: any, uiSegmentSrv: any, templateSrv: any, $compile: any);
    setTargetWithQuery(): void;
    setTargetWithElements(): void;
    setTargetWithText(): void;
    onChangeInternal(): void;
    changeQueryType(): void;
    getElementSegments(newSegment: any): any;
    addElementSegment(): void;
    segmentValueChanged(segment: any, index: any): void;
    topNValueChanged(): void;
    getWheresToEdit(where: any, index: any): any;
    whereValueChanged(where: any, index: any): void;
    getWheresToAddNew(): any;
    addWhere(): void;
    getFilterToEdit(): any;
    filterValueChanged(): void;
    getOrderBysToAddNew(): any;
    getOrderBysToEdit(orderBy: any): any;
    addOrderBy(): void;
    orderByValueChanged(orderBy: any, index: any): void;
    getFunctionsToAddNew(): Promise<any>;
    getFunctionsToEdit(func: any, index: any): any;
    functionValueChanged(func: any, index: any): void;
    addFunctionSegment(): void;
    buildFunctionArray(): void;
    getBooleans(): Promise<any[]>;
    getAngleUnits(): Promise<any[]>;
    getTimeSelect(): Promise<any[]>;
    inputChange(func: any, index: any): void;
}
