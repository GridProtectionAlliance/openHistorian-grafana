{"version":3,"sources":["../../src/controllers/query_ctrl.js"],"names":["QueryCtrl","_","angular","OpenHistorianDataSourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","textEditor","segments","wheres","topNSegment","elementSegment","newPlusButton","whereSegment","filterSegment","newSegment","orderBySegment","filter","value","topn","where","each","element","index","list","orderby","panelCtrl","refresh","ctrl","datasource","metricFindQuery","then","data","altSegments","map","item","text","expandable","option","event","sort","a","b","unshift","find","x","segment","undefined","push","plusButton","html","targets","split","splice","join","setTargetWithQuery","type","q","when","newOperators","newCondition","whereFindQuery","length","newOperator","newFake","filterFindQuery","orderByFindQuery","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk'\r\nimport './../css/query-editor.css!'\r\nimport _ from 'lodash'\r\nimport angular from 'angular'\r\n\r\nexport class OpenHistorianDataSourceQueryCtrl extends QueryCtrl{\r\n  constructor($scope, $injector, uiSegmentSrv)  {\r\n    super($scope, $injector);\r\n\r\n\r\n    this.scope = $scope;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    this.target.target = '';\r\n    this.target.textEditor = false;\r\n    this.segments = [];\r\n    this.wheres = [];\r\n    this.topNSegment = null;\r\n    this.elementSegment = this.uiSegmentSrv.newPlusButton();\r\n    this.whereSegment = this.uiSegmentSrv.newPlusButton();\r\n    this.filterSegment = this.uiSegmentSrv.newSegment('ActiveMeasurement');\r\n    this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n  }\r\n\r\n  setTargetWithQuery() {\r\n      var filter = this.filterSegment.value + ' ';\r\n      var topn = (this.topNSegment ? 'TOP ' + this.topNSegment + ' ' : '');\r\n      var where = 'WHERE ';\r\n\r\n      \r\n      _.each(this.wheres, function (element, index, list) {\r\n            where += element.value + ' '\r\n      });\r\n\r\n      var orderby = (this.orderBySegment.value ? 'ORDER BY ' + this.orderBySegment.value + ' ' : '');\r\n\r\n      this.target.target = 'FILTER ' + topn + filter + where + orderby;\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  getInitialSegments(){\r\n    var ctrl = this;\r\n    this.datasource.metricFindQuery(ctrl.target)\r\n      .then(function(data){\r\n        var altSegments = _.map(data, item =>{\r\n          return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable});\r\n        });\r\n\r\n        return altSegments;\r\n      });\r\n  }\r\n\r\n  onChangeInternal() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  toggleEditorMode(){\r\n    this.target.textEditor = !this.target.textEditor;\r\n  }\r\n\r\n  textEditorChanged(){\r\n    var ctrl = this;\r\n  }\r\n\r\n    // get a ui segment for the attributes\r\n  getElementSegmentsToEdit() {\r\n      var ctrl = this;\r\n      var option = null;\r\n      if (event.target.value != \"\") option = event.target.value; \r\n\r\n    var ctrl = this;\r\n    return this.datasource.metricFindQuery(option).then( data => {\r\n        var altSegments = _.map(data, item => {\r\n            return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable})\r\n        });\r\n        altSegments.sort((a,b)=>{           \r\n          if(a.value < b.value)\r\n            return -1;\r\n          if(a.value > b.value)\r\n            return 1;\r\n          return 0;\r\n        });\r\n        altSegments.unshift(ctrl.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n        return _.filter(altSegments, segment => {\r\n          return _.find(ctrl.segments, x => {\r\n            return x.value == segment.value\r\n          }) == undefined;\r\n        });\r\n    });\r\n    \r\n  }\r\n\r\n    getElementSegmentsToAddNew () {\r\n        var ctrl = this;\r\n        var option = null;\r\n        if (event.target.value != \"\") option = event.target.value; \r\n        return this.datasource.metricFindQuery(option).then( data => {\r\n            var altSegments = _.map(data, item => {\r\n                return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable})\r\n            });\r\n            altSegments.sort((a,b)=>{ \r\n              if(a.value < b.value)\r\n                return -1;\r\n              if(a.value > b.value)\r\n                return 1;\r\n              return 0;\r\n            });\r\n\r\n            return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                return x.value == segment.value\r\n              }) == undefined;\r\n            });\r\n        });\r\n    \r\n  }\r\n\r\n\r\n  addElementSegment(){\r\n          // if value is not empty, add new attribute segment\r\n    if (this.elementSegment.value != null) {\r\n      this.segments.push(this.uiSegmentSrv.newSegment({value: this.elementSegment.value, expandable: true}))\r\n      this.target.target += (this.target.target == \"\" ? '' : ';') + this.elementSegment.value;\r\n    }\r\n\r\n    // reset the + button\r\n    var plusButton = this.uiSegmentSrv.newPlusButton()\r\n    this.elementSegment.value = plusButton.value\r\n    this.elementSegment.html = plusButton.html\r\n    this.panelCtrl.refresh()\r\n\r\n  }\r\n  // changes the selecte af element segment\r\n  segmentValueChanged (segment, index) {\r\n    if(segment.value== \"-REMOVE-\"){\r\n      var targets = this.target.target.split(';');\r\n      this.segments.splice(index, 1);\r\n      targets.splice(index, 1);\r\n      this.target.target = targets.join(';');\r\n    }\r\n    else{\r\n      var targets = this.target.target.split(';');\r\n      this.segments[index] = segment;\r\n      targets[index] = segment.value;\r\n      this.target.target = targets.join(';');\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  // used to change the query type from element list to filter expression\r\n  changeQueryType() {\r\n      this.target.target = '';\r\n      this.segments = [];\r\n      this.wheres = [];\r\n      this.topNSegment = '';\r\n      this.elementSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.whereSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.filterSegment = this.uiSegmentSrv.newSegment('ActiveMeasurements');\r\n      this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n  }\r\n\r\n  topNValueChanged() {\r\n      this.setTargetWithQuery();\r\n  }\r\n\r\n  getWheresToEdit(where, index) {\r\n\r\n      if (where.type === 'operator') {\n          return this.datasource.q.when(this.uiSegmentSrv.newOperators(['=', '<>', '<', '<=', '>', '>=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN']));\n      }\n      else if (where.type === 'value') {\r\n          return this.datasource.q.when(null);\r\n      }\r\n      else if (where.type === 'condition') {\r\n          return this.datasource.q.when([this.uiSegmentSrv.newCondition('AND'), this.uiSegmentSrv.newCondition('OR')]);\r\n      }\r\n      else {\r\n          return this.datasource.whereFindQuery(this.filterSegment.value).then(data => {\r\n              var altSegments = _.map(data, item => {\r\n                  return this.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n              });\r\n              altSegments.sort((a, b) => {\r\n                  if (a.value < b.value)\r\n                      return -1;\r\n                  if (a.value > b.value)\r\n                      return 1;\r\n                  return 0;\r\n              });\r\n              altSegments.unshift(this.uiSegmentSrv.newSegment('-REMOVE-'));\r\n              return _.filter(altSegments, segment => {\r\n                  return _.find(this.segments, x => {\r\n                      return x.value == segment.value\r\n                  }) == undefined;\r\n              });\r\n          });\r\n      }\r\n\r\n  }\r\n\r\n  whereValueChanged(where, index) {\r\n\r\n      if (where.value == \"-REMOVE-\") {\r\n          if (index == 0 && this.wheres.length > 3 && this.wheres[index + 3].type == 'condition') \r\n              this.wheres.splice(index, 4)\r\n          else if (index > 0 && this.wheres[index - 1].type == 'condition')\r\n              this.wheres.splice(index - 1, 4)\r\n          else\r\n              this.wheres.splice(index, 3)\r\n      }\r\n\r\n      this.setTargetWithQuery();\r\n  }\r\n\r\n  getWheresToAddNew() {\r\n      var ctrl = this;\r\n      return this.datasource.whereFindQuery(ctrl.filterSegment.value).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  addWhere() {\r\n      if (this.wheres.length > 0) \n          this.wheres.push(this.uiSegmentSrv.newCondition('AND'));\n\r\n      this.wheres.push(this.uiSegmentSrv.newSegment(event.target.text));\r\n      this.wheres.push(this.uiSegmentSrv.newOperator('NOT LIKE'));\n      this.wheres.push(this.uiSegmentSrv.newFake(\"''\", 'value', 'query-segment-value'));\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      this.whereSegment.value = plusButton.value\r\n      this.whereSegment.html = plusButton.html\r\n      this.setTargetWithQuery();\r\n\r\n  }\r\n\r\n  getFilterToEdit() {\r\n      var ctrl = this;\r\n      return this.datasource.filterFindQuery().then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  filterValueChanged() {\r\n      //this.target.policy = this.topNSegment;\r\n      this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      this.wheres = [];\r\n      this.setTargetWithQuery();\r\n\r\n      this.panelCtrl.refresh();\r\n  }\r\n\r\n  getOrderBysToAddNew() {\r\n      var ctrl = this;\r\n      return this.datasource.orderByFindQuery(ctrl.filterSegment.value).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          if(this.orderBySegment.type !== 'plus-button')\r\n            altSegments.unshift(this.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  orderByValueChanged() {\r\n      if (event.target.text == \"-REMOVE-\")\r\n          this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      else\r\n        this.orderBySegment = this.uiSegmentSrv.newSegment(event.target.text);\r\n      this.setTargetWithQuery();\r\n\r\n  }\r\n\r\n}\r\n\r\nOpenHistorianDataSourceQueryCtrl.templateUrl ='partial/query.editor.html';"]}