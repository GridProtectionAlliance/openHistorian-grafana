{"version":3,"sources":["../../src/controllers/query_ctrl.js"],"names":["QueryCtrl","QueryPart","_","angular","OpenHistorianDataSourceQueryCtrl","$scope","$injector","uiSegmentSrv","templateSrv","scope","target","textEditor","segments","wheres","functions","functionSegments","topNSegment","elementSegment","newPlusButton","whereSegment","filterSegment","newSegment","orderBySegment","functionSegment","functionList","Set","Function","Parameters","Slice","Default","Type","Description","Average","Minimum","Maximum","Total","Range","Count","Distinct","AbsoluteValute","Add","Multiply","Round","Floor","Ceiling","Truncate","StandardDeviation","Median","Mode","Top","Bottom","Random","First","Last","Percentile","Difference","TimeDifference","Derivative","TimeIntegration","Interval","IncludeRange","ExcludeRange","FilterNaN","UnwrapAngle","WrapAngle","Label","filter","value","topn","where","each","element","index","list","orderby","query","panelCtrl","refresh","ctrl","map","a","join","typingTimer","option","event","datasource","metricFindQuery","then","altSegments","data","item","text","expandable","sort","b","unshift","find","x","segment","undefined","push","setTargetWithElements","plusButton","html","targets","split","splice","setTargetWithQuery","type","q","when","newOperators","newCondition","whereFindQuery","length","newOperator","newFake","filterFindQuery","orderByFindQuery","array","Object","keys","slice","func","remove","funcSeg","l","fi","findIndex","Index","buildFunctionArray","queryType","assign","newElement","operator","param","i","j","d","toString","clearTimeout","setTimeout","functionValueChanged","focus","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk'\r\nimport { QueryPart } from 'app/core/components/query_part/query_part'\r\nimport './../css/query-editor.css!'\r\nimport _ from 'lodash'\r\nimport angular from 'angular'\r\n\r\nexport class OpenHistorianDataSourceQueryCtrl extends QueryCtrl{\r\n    constructor($scope, $injector, uiSegmentSrv, templateSrv) {\r\n        super($scope, $injector);\r\n\r\n\r\n        this.scope = $scope;\r\n        this.uiSegmentSrv = uiSegmentSrv;\r\n        this.target.target = '';\r\n        this.target.textEditor = false;\r\n        this.segments = [];\r\n        this.wheres = [];\r\n        this.functions = [];\r\n        this.functionSegments = [];\r\n        this.topNSegment = null;\r\n        this.elementSegment = this.uiSegmentSrv.newPlusButton();\r\n        this.whereSegment = this.uiSegmentSrv.newPlusButton();\r\n        this.filterSegment = this.uiSegmentSrv.newSegment('ActiveMeasurement');\r\n        this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n        this.functionSegment = this.uiSegmentSrv.newPlusButton();\r\n\r\n        this.functionList = {\r\n        Set : { Function : 'Set', Parameters: [] },\r\n        Slice : { Function : 'Slice', Parameters: [{ Default: 1, Type: 'double', Description: 'A floating-point value that must be greater than or equal to zero that represents the desired time tolerance, in seconds, for the time slice.' }] },\r\n        Average : { Function : 'Average', Parameters: [] },\r\n        Minimum : { Function : 'Minimum', Parameters: [] },\r\n        Maximum : { Function : 'Maximum', Parameters: [] },\r\n        Total: {  Function : 'Total', Parameters: [] },\r\n        Range : { Function : 'Range', Parameters: [] },\r\n        Count : { Function : 'Count', Parameters: [] },\r\n        Distinct: { Function : 'Distinct', Parameters: [] },\r\n        AbsoluteValute : { Function : 'AbsoluteValue', Parameters: [] },\r\n        Add : { Function : 'Add', Parameters: [{ Default: 0, Type: 'double', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n        Multiply : { Function : 'Multiply', Parameters: [{ Default: 1, Type: 'double', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n        Round : { Function : 'Round', Parameters: [{ Default: 0, Type: 'double', Description: 'A positive integer value representing the number of decimal places in the return value - defaults to 0.' }] },\r\n        Floor  : { Function : 'Floor', Parameters: [] },\r\n        Ceiling : { Function : 'Ceiling', Parameters: [] },\r\n        Truncate : { Function : 'Truncate', Parameters: [] },\r\n        StandardDeviation : { Function : 'StandardDeviation', Parameters: [{ Default: false, Type: 'boolean', Description: 'A boolean flag representing if the sample based calculation should be used - defaults to false, which means the population based calculation should be used.' }] },\r\n        Median : { Function : 'Median', Parameters: [] },\r\n        Mode : { Function : 'Mode', Parameters: [] },\r\n        Top : { Function : 'Top', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n        Bottom : { Function : 'Bottom', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n        Random : { Function : 'Random', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n        First : { Function : 'First', Parameters: [{ Default: '1', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.' }] },\r\n        Last : { Function : 'Last', Parameters: [{ Default: '1', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.' }] },\r\n        Percentile : { Function : 'Percentile', Parameters: [{ Default: '100%', Type: 'string', Description: 'A floating point value, representing a percentage, that must range from 0 to 100.' }] },\r\n        Difference : { Function : 'Difference', Parameters: [] },\r\n        TimeDifference : { Function : 'TimeDifference', Parameters: [{ Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n        Derivative : { Function : 'Derivative', Parameters: [{ Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n        TimeIntegration : { Function : 'TimeIntegration', Parameters: [{ Default: 'Hours', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Hours.' }] },\r\n        Interval: { Function : 'Interval', Parameters: [{ Default: 0, Type: 'double', Description: 'A floating-point value that must be greater than or equal to zero that represents the desired time interval, in time units, for the returned data. ' }, { Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n        IncludeRange: { Function : 'IncludeRange', Parameters: [{ Default: 0, Type: 'double', Description: 'Floating-point number that represents the low range of values allowed in the return series.' }, { Default: 0, Type: 'double', Description: 'Floating-point number that represents the high range of values allowed in the return series.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag that determines if range values are inclusive, i.e., allowed values are >= low and <= high - defaults to false, which means values are exclusive, i.e., allowed values are > low and < high.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag - when four parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.' }] },\r\n        ExcludeRange : { Function : 'ExcludeRange', Parameters: [{ Default: 0, Type: 'double', Description: 'Floating-point number that represents the low range of values allowed in the return series.' }, { Default: 0, Type: 'double', Description: 'Floating-point number that represents the high range of values allowed in the return series.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag that determines if range values are inclusive, i.e., allowed values are >= low and <= high - defaults to false, which means values are exclusive, i.e., allowed values are > low and < high.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag - when four parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.' }] },\r\n        FilterNaN : { Function : 'FilterNaN', Parameters: [{ Default: true, Type: 'boolean', Description: 'A boolean flag that determines if infinite values should also be excluded - defaults to true.' }] },\r\n        UnwrapAngle : { Function : 'UnwrapAngle', Parameters: [{ Default: 'Degrees', Type: 'angleUnits', Description: 'Specifies the type of angle units and must be one of the following: Degrees, Radians, Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.' }] },\r\n        WrapAngle : { Function : 'WrapAngle', Parameters: [{ Default: 'Degrees', Type: 'angleUnits', Description: 'Specifies the type of angle units and must be one of the following: Degrees, Radians, Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.' }] },\r\n        Label : { Function : 'Label', Parameters: [{ Default: 'Name', Type: 'string', Description: 'Renames a series with the specified label value.' }] },\r\n    };\r\n  }\r\n\r\n  setTargetWithQuery() {\r\n      var filter = this.filterSegment.value + ' ';\r\n      var topn = (this.topNSegment ? 'TOP ' + this.topNSegment + ' ' : '');\r\n      var where = 'WHERE ';\r\n      \r\n      _.each(this.wheres, function (element, index, list) {\r\n            where += element.value + ' '\r\n      });\r\n\r\n      var orderby = (this.orderBySegment.value ? 'ORDER BY ' + this.orderBySegment.value + ' ' : '');\r\n\r\n      var query = 'FILTER ' + topn + filter + where + orderby;\r\n      var functions = '';\r\n\r\n      _.each(this.functions, function (element, index, list) {\r\n          if (element.value == 'QUERY') functions += query;\r\n          else functions += element.value;\r\n      });\r\n\r\n      this.target.target = (functions != \"\"? functions: query);\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  setTargetWithElements() {\r\n      var functions = '';\r\n      var ctrl = this;\r\n      _.each(this.functions, function (element, index, list) {\r\n          if (element.value == 'QUERY') functions += ctrl.segments.map(function (a) { return a.value }).join(';');\r\n          else functions += element.value;\r\n      });\r\n\r\n      this.target.target = (functions != \"\" ? functions : this.segments.map(function (a) { return a.value }).join(';'));\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  onChangeInternal() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  toggleEditorMode(){\r\n    this.target.textEditor = !this.target.textEditor;\r\n  }\r\n\r\n  textEditorChanged(){\r\n      this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  // used to change the query type from element list to filter expression\r\n  changeQueryType() {\r\n      this.target.target = '';\r\n      this.segments = [];\r\n      this.wheres = [];\r\n      this.functions = [];\r\n      this.functionSegments = [];\r\n      this.topNSegment = '';\r\n      this.elementSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.whereSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.filterSegment = this.uiSegmentSrv.newSegment('ActiveMeasurements');\r\n      this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      this.functionSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.panelCtrl.refresh();\r\n      this.typingTimer;\r\n  }\r\n\r\n\r\n  // #region Elements\r\n  getElementSegmentsToEdit() {\r\n      var ctrl = this;\r\n      var option = null;\r\n      if (event.target.value != \"\") option = event.target.value; \r\n\r\n    var ctrl = this;\r\n    return this.datasource.metricFindQuery(option).then( data => {\r\n        var altSegments = _.map(data, item => {\r\n            return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable})\r\n        });\r\n        altSegments.sort((a,b)=>{           \r\n          if(a.value < b.value)\r\n            return -1;\r\n          if(a.value > b.value)\r\n            return 1;\r\n          return 0;\r\n        });\r\n        altSegments.unshift(ctrl.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n        return _.filter(altSegments, segment => {\r\n          return _.find(ctrl.segments, x => {\r\n            return x.value == segment.value\r\n          }) == undefined;\r\n        });\r\n    });\r\n    \r\n  }\r\n\r\n  getElementSegmentsToAddNew () {\r\n        var ctrl = this;\r\n        var option = null;\r\n        if (event.target.value != \"\") option = event.target.value; \r\n        return this.datasource.metricFindQuery(option).then( data => {\r\n            var altSegments = _.map(data, item => {\r\n                return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable})\r\n            });\r\n            altSegments.sort((a,b)=>{ \r\n                if(a.value < b.value)\r\n                return -1;\r\n                if(a.value > b.value)\r\n                return 1;\r\n                return 0;\r\n            });\r\n\r\n            return _.filter(altSegments, segment => {\r\n                return _.find(ctrl.segments, x => {\r\n                return x.value == segment.value\r\n                }) == undefined;\r\n            });\r\n        });\r\n    \r\n  }\r\n\r\n\r\n  addElementSegment(){\r\n          // if value is not empty, add new attribute segment\r\n    if (this.elementSegment.value != null) {\r\n      this.segments.push(this.uiSegmentSrv.newSegment({value: this.elementSegment.value, expandable: true}))\r\n      this.setTargetWithElements()\r\n    }\r\n\r\n    // reset the + button\r\n    var plusButton = this.uiSegmentSrv.newPlusButton()\r\n    this.elementSegment.value = plusButton.value\r\n    this.elementSegment.html = plusButton.html\r\n    this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  segmentValueChanged(segment, index) {\r\n    if(segment.value== \"-REMOVE-\"){\r\n      var targets = this.target.target.split(';');\r\n      this.segments.splice(index, 1);\r\n      targets.splice(index, 1);\r\n      this.target.target = targets.join(';');\r\n    }\r\n    else{\r\n      var targets = this.target.target.split(';');\r\n      this.segments[index] = segment;\r\n      targets[index] = segment.value;\r\n      this.target.target = targets.join(';');\r\n    }\r\n    \r\n    \r\n  }\r\n  // #endregion\r\n\r\n  // #region TOP N\r\n  topNValueChanged() {\r\n      this.setTargetWithQuery();\r\n  }\r\n  // #endregion\r\n\r\n  // #region Wheres\r\n  getWheresToEdit(where, index) {\r\n\r\n      if (where.type === 'operator') {\r\n          return this.datasource.q.when(this.uiSegmentSrv.newOperators(['=', '<>', '<', '<=', '>', '>=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN']));\r\n      }\r\n      else if (where.type === 'value') {\r\n          return this.datasource.q.when(null);\r\n      }\r\n      else if (where.type === 'condition') {\r\n          return this.datasource.q.when([this.uiSegmentSrv.newCondition('AND'), this.uiSegmentSrv.newCondition('OR')]);\r\n      }\r\n      else {\r\n          return this.datasource.whereFindQuery(this.filterSegment.value).then(data => {\r\n              var altSegments = _.map(data, item => {\r\n                  return this.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n              });\r\n              altSegments.sort((a, b) => {\r\n                  if (a.value < b.value)\r\n                      return -1;\r\n                  if (a.value > b.value)\r\n                      return 1;\r\n                  return 0;\r\n              });\r\n              altSegments.unshift(this.uiSegmentSrv.newSegment('-REMOVE-'));\r\n              return _.filter(altSegments, segment => {\r\n                  return _.find(this.segments, x => {\r\n                      return x.value == segment.value\r\n                  }) == undefined;\r\n              });\r\n          });\r\n      }\r\n\r\n  }\r\n\r\n  whereValueChanged(where, index) {\r\n\r\n      if (where.value == \"-REMOVE-\") {\r\n          if (index == 0 && this.wheres.length > 3 && this.wheres[index + 3].type == 'condition') \r\n              this.wheres.splice(index, 4)\r\n          else if (index > 0 && this.wheres[index - 1].type == 'condition')\r\n              this.wheres.splice(index - 1, 4)\r\n          else\r\n              this.wheres.splice(index, 3)\r\n      }\r\n\r\n      this.setTargetWithQuery();\r\n  }\r\n\r\n  getWheresToAddNew() {\r\n      var ctrl = this;\r\n      return this.datasource.whereFindQuery(ctrl.filterSegment.value).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  addWhere() {\r\n      if (this.wheres.length > 0) \r\n          this.wheres.push(this.uiSegmentSrv.newCondition('AND'));\r\n\r\n      this.wheres.push(this.uiSegmentSrv.newSegment(event.target.text));\r\n      this.wheres.push(this.uiSegmentSrv.newOperator('NOT LIKE'));\r\n      this.wheres.push(this.uiSegmentSrv.newFake(\"''\", 'value', 'query-segment-value'));\r\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      this.whereSegment.value = plusButton.value\r\n      this.whereSegment.html = plusButton.html\r\n      this.setTargetWithQuery();\r\n\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Filters\r\n  getFilterToEdit() {\r\n      var ctrl = this;\r\n      return this.datasource.filterFindQuery().then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  filterValueChanged() {\r\n      //this.target.policy = this.topNSegment;\r\n      this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      this.wheres = [];\r\n      this.setTargetWithQuery();\r\n\r\n      this.panelCtrl.refresh();\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region OrderBys\r\n  getOrderBysToAddNew() {\r\n      var ctrl = this;\r\n      return this.datasource.orderByFindQuery(ctrl.filterSegment.value).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          if(this.orderBySegment.type !== 'plus-button')\r\n            altSegments.unshift(this.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  orderByValueChanged() {\r\n      if (event.target.text == \"-REMOVE-\")\r\n          this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      else\r\n        this.orderBySegment = this.uiSegmentSrv.newSegment(event.target.text);\r\n      this.setTargetWithQuery();\r\n\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Functions\r\n  getFunctionsToAddNew() {\r\n      var ctrl = this;\r\n      var array = []\r\n      _.each(Object.keys(this.functionList), function (element, index, list) {\r\n          array.push(ctrl.uiSegmentSrv.newSegment(element));\r\n      });\r\n\r\n      if (this.functions.length == 0) array = array.slice(2,array.length);\r\n\r\n      return this.datasource.q.when(_.filter( array, segment => {\r\n          return _.find(this.functions, x => {\r\n              return x.value == segment.value;\r\n          }) == undefined;\r\n      }));\r\n  }\r\n\r\n  getFunctionsToEdit(func, index) {\r\n      var ctrl = this;\r\n      var remove = [this.uiSegmentSrv.newSegment('-REMOVE-')];\r\n      if (func.type == 'Operator') return this.datasource.q.when();\r\n      else if (func.value == 'Set') return this.datasource.q.when(remove)\r\n\r\n      return this.datasource.q.when(remove);\r\n  }\r\n\r\n  functionValueChanged(func, index) {\r\n      var funcSeg = this.functionList[func.Function];\r\n\r\n      if (func.value == \"-REMOVE-\") {\r\n          var l = 1;\r\n          var fi = _.findIndex(this.functionSegments, function (segment) { return segment.Function == func.Function });\r\n          if (func.Function == 'Slice')\r\n              this.functionSegments[fi + 1].Parameters = this.functionSegments[fi + 1].Parameters.slice(1, this.functionSegments[fi + 1].Parameters.length);\r\n          else if (fi > 0 && (this.functionSegments[fi - 1].Function == 'Set' || this.functionSegments[fi - 1].Function == 'Slice')) {\r\n              --fi;\r\n                ++l;\r\n          }\r\n\r\n          this.functionSegments.splice(fi,l);\r\n      }\r\n      else if(func.Type != 'Function') {\r\n          funcSeg.Parameters[func.Index].Default = func.value;\r\n      }\r\n\r\n      this.buildFunctionArray()\r\n      if (this.queryType == 2)\r\n          this.setTargetWithQuery();\r\n      else\r\n          this.setTargetWithElements() \r\n\r\n  }\r\n\r\n  addFunctionSegment() {\r\n      var func = this.functionList[event.target.text];\r\n\r\n      if (this.functionSegment.value == 'Slice') {\r\n          this.functionSegments[0].Parameters.unshift(func.Parameters[0])\r\n      }\r\n\r\n      this.functionSegments.unshift(Object.assign({},func));\r\n      this.buildFunctionArray();\r\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      this.functionSegment.value = plusButton.value\r\n      this.functionSegment.html = plusButton.html\r\n\r\n\r\n  }\r\n\r\n  buildFunctionArray() {\r\n      var ctrl = this;\r\n      ctrl.functions = [];\r\n\r\n      if (this.functionSegments.length == 0) return;\r\n\r\n      _.each(ctrl.functionSegments, function (element, index, list) {\r\n          var newElement = ctrl.uiSegmentSrv.newSegment(element.Function)\r\n          newElement.Type = 'Function';\r\n          newElement.Function = element.Function;\r\n\r\n          ctrl.functions.push(newElement)\r\n\r\n          if (newElement.value == 'Set' || newElement.value == 'Slice') return;\r\n\r\n          var operator = ctrl.uiSegmentSrv.newOperator('(');\r\n          operator.Type = 'Operator';\r\n          ctrl.functions.push(operator);\r\n\r\n          _.each(element.Parameters, function (param, i, j) {\r\n              var d = ctrl.uiSegmentSrv.newFake(param.Default.toString());\r\n              d.Type = param.Type;\r\n              d.Function = element.Function;\r\n              d.Description = param.Description;\r\n              d.Index = i;\r\n              ctrl.functions.push(d);\r\n\r\n              var operator = ctrl.uiSegmentSrv.newOperator(',');\r\n              operator.Type = 'Operator';\r\n              ctrl.functions.push(operator);\r\n          })\r\n\r\n      });\r\n\r\n      var query = ctrl.uiSegmentSrv.newCondition('QUERY');\r\n      query.Type = 'Query';\r\n      ctrl.functions.push(query);\r\n\r\n      for (var i in ctrl.functionSegments) {\r\n          if (ctrl.functionSegments[i].Function != 'Set' && ctrl.functionSegments[i].Function != 'Slice') {\r\n              var operator = ctrl.uiSegmentSrv.newOperator(')');\r\n              operator.Type = 'Operator';\r\n              ctrl.functions.push(operator);\r\n          }\r\n\r\n      }\r\n\r\n      if (ctrl.queryType == 2)\r\n          ctrl.setTargetWithQuery();\r\n      else\r\n          ctrl.setTargetWithElements() \r\n\r\n  }\r\n\r\n  getBooleans() {\r\n      var array = [\r\n          this.uiSegmentSrv.newSegment('true'),\r\n          this.uiSegmentSrv.newSegment('false')\r\n      ];\r\n      return this.datasource.q.when(array);\r\n  }\r\n\r\n  getAngleUnits() {\r\n      var array = [\r\n          this.uiSegmentSrv.newSegment('Degrees'),\r\n          this.uiSegmentSrv.newSegment('Radians'),\r\n          this.uiSegmentSrv.newSegment('Grads'),\r\n          this.uiSegmentSrv.newSegment('ArcMinutes'),\r\n          this.uiSegmentSrv.newSegment('ArcSeconds'),\r\n          this.uiSegmentSrv.newSegment('AngularMil')\r\n      ];\r\n      return this.datasource.q.when(array);\r\n  }\r\n\r\n  getTimeSelect() {\r\n      var array = [\r\n          this.uiSegmentSrv.newSegment('Weeks'),\r\n          this.uiSegmentSrv.newSegment('Days'),\r\n          this.uiSegmentSrv.newSegment('Hours'),\r\n          this.uiSegmentSrv.newSegment('Minutes'),\r\n          this.uiSegmentSrv.newSegment('Seconds'),\r\n          this.uiSegmentSrv.newSegment('Milliseconds'),\r\n          this.uiSegmentSrv.newSegment('Microseconds'),\r\n          this.uiSegmentSrv.newSegment('Nanoseconds'),\r\n          this.uiSegmentSrv.newSegment('Ticks'),\r\n          this.uiSegmentSrv.newSegment('PlanckTime'),\r\n          this.uiSegmentSrv.newSegment('AtomicUnitsOfTime'),\r\n          this.uiSegmentSrv.newSegment('Ke')\r\n      ];\r\n      return this.datasource.q.when(array);\r\n  }\r\n\r\n  inputChange(func, index) {\r\n      var ctrl = this;\r\n      clearTimeout(this.typingTimer);\r\n      this.typingTimer = setTimeout(function () { ctrl.functionValueChanged(func, index) }, 1000);\r\n      event.target.focus()\r\n      \r\n  }\r\n\r\n  // #endregion\r\n\r\n}\r\n\r\nOpenHistorianDataSourceQueryCtrl.templateUrl ='partial/query.editor.html';"]}