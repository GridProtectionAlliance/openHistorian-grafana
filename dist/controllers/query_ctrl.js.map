{"version":3,"sources":["../../src/controllers/query_ctrl.js"],"names":["QueryCtrl","_","OpenHistorianDataSourceQueryCtrl","$scope","$injector","uiSegmentSrv","templateSrv","scope","ctrl","target","textEditor","segments","undefined","map","a","newSegment","value","text","expandable","queryTypes","queryType","wheres","type","newOperator","newCondition","functionSegments","topNSegment","functions","elementSegment","newPlusButton","whereSegment","filterSegment","orderBySegment","functionSegment","phasorSegment","phasorSegments","typingTimer","functionList","Set","Function","Parameters","Slice","Default","Type","Description","Average","Minimum","Maximum","Total","Range","Count","Distinct","AbsoluteValute","Add","Multiply","Round","Floor","Ceiling","Truncate","StandardDeviation","Median","Mode","Top","Bottom","Random","First","Last","Percentile","Difference","TimeDifference","Derivative","TimeIntegration","Interval","IncludeRange","ExcludeRange","FilterNaN","UnwrapAngle","WrapAngle","Label","buildFunctionArray","setTargetWithQuery","setTargetWithElements","filter","topn","where","each","element","index","list","orderby","query","panelCtrl","refresh","join","option","event","datasource","metricFindQuery","then","altSegments","data","item","sort","b","unshift","find","x","segment","push","plusButton","html","targets","split","splice","phasorFindQuery","setTargetWithPhasors","q","when","newOperators","whereFindQuery","length","newFake","filterFindQuery","orderByFindQuery","array","Object","keys","slice","func","remove","funcSeg","l","fi","findIndex","Index","JSON","parse","stringify","newElement","operator","param","i","j","d","toString","clearTimeout","setTimeout","functionValueChanged","focus","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk'\r\nimport './../css/query-editor.css!'\r\nimport _ from 'lodash'\r\n\r\nexport class OpenHistorianDataSourceQueryCtrl extends QueryCtrl{\r\n    constructor($scope, $injector, uiSegmentSrv, templateSrv) {\r\n        super($scope, $injector);\r\n\r\n\r\n        this.scope = $scope;\r\n        var ctrl = this;\r\n        this.uiSegmentSrv = uiSegmentSrv;\r\n        this.target.target = '';\r\n        this.target.textEditor = false;\r\n        this.segments = (this.target.segments == undefined ? [] : this.target.segments.map(function (a) { return ctrl.uiSegmentSrv.newSegment({ value: a.text, expandable: true }) }));\r\n        this.queryTypes = [\r\n            \"Element List\", \"Filter Expression\", \"Phasor List\"\r\n        ];\r\n        this.queryType = (this.target.queryType == undefined ? \"Element List\" : this.target.queryType);\r\n        this.wheres = (this.target.wheres == undefined ? [] : this.target.wheres.map(function (a) {\r\n            if (a.type == 'operator') return ctrl.uiSegmentSrv.newOperator(a.text);\r\n            else if (a.type == 'condition') return ctrl.uiSegmentSrv.newCondition(a.text);\r\n            else return ctrl.uiSegmentSrv.newSegment(a.value);\r\n        }));\r\n        this.functionSegments = (this.target.functionSegments == undefined ? [] : this.target.functionSegments);\r\n        this.topNSegment = (this.target.topNSegment == undefined ? null : this.target.topNSegment);\r\n        this.functions = [];\r\n        this.elementSegment = this.uiSegmentSrv.newPlusButton();\r\n        this.whereSegment = this.uiSegmentSrv.newPlusButton();\r\n        this.filterSegment = (this.target.filterSegment == undefined ? this.uiSegmentSrv.newSegment('ActiveMeasurement') : this.uiSegmentSrv.newSegment(this.target.filterSegment.value));\r\n        this.orderBySegment = (this.target.orderBySegment == undefined ? this.uiSegmentSrv.newPlusButton() : this.target.orderBySegment);\r\n        this.functionSegment = this.uiSegmentSrv.newPlusButton();\r\n\r\n        this.phasorSegment = this.uiSegmentSrv.newPlusButton();\r\n        this.phasorSegments = [];\r\n        this.typingTimer;\r\n\r\n        this.functionList = {\r\n            Set : { Function : 'Set', Parameters: [] },\r\n            Slice : { Function : 'Slice', Parameters: [{ Default: 1, Type: 'double', Description: 'A floating-point value that must be greater than or equal to zero that represents the desired time tolerance, in seconds, for the time slice.' }] },\r\n            Average : { Function : 'Average', Parameters: [] },\r\n            Minimum : { Function : 'Minimum', Parameters: [] },\r\n            Maximum : { Function : 'Maximum', Parameters: [] },\r\n            Total: {  Function : 'Total', Parameters: [] },\r\n            Range : { Function : 'Range', Parameters: [] },\r\n            Count : { Function : 'Count', Parameters: [] },\r\n            Distinct: { Function : 'Distinct', Parameters: [] },\r\n            AbsoluteValute : { Function : 'AbsoluteValue', Parameters: [] },\r\n            Add : { Function : 'Add', Parameters: [{ Default: 0, Type: 'double', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n            Multiply : { Function : 'Multiply', Parameters: [{ Default: 1, Type: 'double', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n            Round : { Function : 'Round', Parameters: [{ Default: 0, Type: 'double', Description: 'A positive integer value representing the number of decimal places in the return value - defaults to 0.' }] },\r\n            Floor  : { Function : 'Floor', Parameters: [] },\r\n            Ceiling : { Function : 'Ceiling', Parameters: [] },\r\n            Truncate : { Function : 'Truncate', Parameters: [] },\r\n            StandardDeviation : { Function : 'StandardDeviation', Parameters: [{ Default: false, Type: 'boolean', Description: 'A boolean flag representing if the sample based calculation should be used - defaults to false, which means the population based calculation should be used.' }] },\r\n            Median : { Function : 'Median', Parameters: [] },\r\n            Mode : { Function : 'Mode', Parameters: [] },\r\n            Top : { Function : 'Top', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n            Bottom : { Function : 'Bottom', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n            Random : { Function : 'Random', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n            First : { Function : 'First', Parameters: [{ Default: '1', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.' }] },\r\n            Last : { Function : 'Last', Parameters: [{ Default: '1', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.' }] },\r\n            Percentile : { Function : 'Percentile', Parameters: [{ Default: '100%', Type: 'string', Description: 'A floating point value, representing a percentage, that must range from 0 to 100.' }] },\r\n            Difference : { Function : 'Difference', Parameters: [] },\r\n            TimeDifference : { Function : 'TimeDifference', Parameters: [{ Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n            Derivative : { Function : 'Derivative', Parameters: [{ Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n            TimeIntegration : { Function : 'TimeIntegration', Parameters: [{ Default: 'Hours', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Hours.' }] },\r\n            Interval: { Function : 'Interval', Parameters: [{ Default: 0, Type: 'double', Description: 'A floating-point value that must be greater than or equal to zero that represents the desired time interval, in time units, for the returned data. ' }, { Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n            IncludeRange: { Function : 'IncludeRange', Parameters: [{ Default: 0, Type: 'double', Description: 'Floating-point number that represents the low range of values allowed in the return series.' }, { Default: 0, Type: 'double', Description: 'Floating-point number that represents the high range of values allowed in the return series.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag that determines if range values are inclusive, i.e., allowed values are >= low and <= high - defaults to false, which means values are exclusive, i.e., allowed values are > low and < high.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag - when four parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.' }] },\r\n            ExcludeRange : { Function : 'ExcludeRange', Parameters: [{ Default: 0, Type: 'double', Description: 'Floating-point number that represents the low range of values allowed in the return series.' }, { Default: 0, Type: 'double', Description: 'Floating-point number that represents the high range of values allowed in the return series.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag that determines if range values are inclusive, i.e., allowed values are >= low and <= high - defaults to false, which means values are exclusive, i.e., allowed values are > low and < high.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag - when four parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.' }] },\r\n            FilterNaN : { Function : 'FilterNaN', Parameters: [{ Default: true, Type: 'boolean', Description: 'A boolean flag that determines if infinite values should also be excluded - defaults to true.' }] },\r\n            UnwrapAngle : { Function : 'UnwrapAngle', Parameters: [{ Default: 'Degrees', Type: 'angleUnits', Description: 'Specifies the type of angle units and must be one of the following: Degrees, Radians, Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.' }] },\r\n            WrapAngle : { Function : 'WrapAngle', Parameters: [{ Default: 'Degrees', Type: 'angleUnits', Description: 'Specifies the type of angle units and must be one of the following: Degrees, Radians, Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.' }] },\r\n            Label : { Function : 'Label', Parameters: [{ Default: 'Name', Type: 'string', Description: 'Renames a series with the specified label value.' }] },\r\n        };\r\n\r\n        this.buildFunctionArray();\r\n\r\n        if (this.queryType == 'Filter Expression')\r\n            this.setTargetWithQuery();\r\n        else\r\n            this.setTargetWithElements()\r\n  }\r\n\r\n  // #region Target Compilation\r\n  setTargetWithQuery() {\r\n      var filter = this.filterSegment.value + ' ';\r\n      var topn = (this.topNSegment ? 'TOP ' + this.topNSegment + ' ' : '');\r\n      var where = 'WHERE ';\r\n      \r\n      _.each(this.wheres, function (element, index, list) {\r\n            where += element.value + ' '\r\n      });\r\n\r\n      var orderby = (this.orderBySegment.value ? 'ORDER BY ' + this.orderBySegment.value + ' ' : '');\r\n\r\n      var query = 'FILTER ' + topn + filter + where + orderby;\r\n      var functions = '';\r\n\r\n      _.each(this.functions, function (element, index, list) {\r\n          if (element.value == 'QUERY') functions += query;\r\n          else functions += element.value;\r\n      });\r\n\r\n      this.target.target = (functions != \"\" ? functions : query);\r\n      this.target.topNSegment = this.topNSegment;\r\n      this.target.filterSegment = this.filterSegment;\r\n      this.target.orderBySegment = this.orderBySegment;\r\n      this.target.wheres = this.wheres;\r\n      this.target.functionSegments = this.functionSegments;\r\n      this.target.queryType = this.queryType;\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  setTargetWithElements() {\r\n      var functions = '';\r\n      var ctrl = this;\r\n      _.each(this.functions, function (element, index, list) {\r\n          if (element.value == 'QUERY') functions += ctrl.segments.map(function (a) { return a.value }).join(';');\r\n          else functions += element.value;\r\n      });\r\n\r\n      this.target.target = (functions != \"\" ? functions : this.segments.map(function (a) { return a.value }).join(';'));\r\n\r\n      this.target.functionSegments = this.functionSegments;\r\n      this.target.segments = this.segments;\r\n      this.target.queryType = this.queryType;\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  setTargetWithPhasors() {\r\n      var ctrl = this;\r\n\r\n      this.target.target = this.phasorSegments.map(function (a) { return a.value }).join(';');\r\n\r\n      this.target.phasorSegments = this.phasorSegments;\r\n      this.target.queryType = this.queryType;\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  // #endregion\r\n\r\n  onChangeInternal() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  toggleEditorMode(){\r\n    this.target.textEditor = !this.target.textEditor;\r\n  }\r\n\r\n  textEditorChanged(){\r\n      this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  // used to change the query type from element list to filter expression\r\n  changeQueryType() {\r\n      this.target.target = '';\r\n      this.segments = [];\r\n      this.wheres = [];\r\n      this.functions = [];\r\n      this.functionSegments = [];\r\n      this.topNSegment = '';\r\n      this.elementSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.whereSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.filterSegment = this.uiSegmentSrv.newSegment('ActiveMeasurements');\r\n      this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      this.functionSegment = this.uiSegmentSrv.newPlusButton();\r\n      this.panelCtrl.refresh();\r\n  }\r\n\r\n\r\n  // #region Elements\r\n  getElementSegmentsToEdit() {\r\n      var ctrl = this;\r\n      var option = null;\r\n      if (event.target.value != \"\") option = event.target.value; \r\n\r\n    var ctrl = this;\r\n    return this.datasource.metricFindQuery(option).then( data => {\r\n        var altSegments = _.map(data, item => {\r\n            return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable})\r\n        });\r\n        altSegments.sort((a,b)=>{           \r\n          if(a.value < b.value)\r\n            return -1;\r\n          if(a.value > b.value)\r\n            return 1;\r\n          return 0;\r\n        });\r\n        altSegments.unshift(ctrl.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n        return _.filter(altSegments, segment => {\r\n          return _.find(ctrl.segments, x => {\r\n            return x.value == segment.value\r\n          }) == undefined;\r\n        });\r\n    });\r\n    \r\n  }\r\n\r\n  getElementSegmentsToAddNew () {\r\n        var ctrl = this;\r\n        var option = null;\r\n        if (event.target.value != \"\") option = event.target.value; \r\n        return this.datasource.metricFindQuery(option).then( data => {\r\n            var altSegments = _.map(data, item => {\r\n                return ctrl.uiSegmentSrv.newSegment({value: item.text, expandable: item.expandable})\r\n            });\r\n            altSegments.sort((a,b)=>{ \r\n                if(a.value < b.value)\r\n                return -1;\r\n                if(a.value > b.value)\r\n                return 1;\r\n                return 0;\r\n            });\r\n\r\n            return _.filter(altSegments, segment => {\r\n                return _.find(ctrl.segments, x => {\r\n                return x.value == segment.value\r\n                }) == undefined;\r\n            });\r\n        });\r\n    \r\n  }\r\n\r\n\r\n  addElementSegment(){\r\n          // if value is not empty, add new attribute segment\r\n    if (event.target.text != null) {\r\n        this.segments.push(this.uiSegmentSrv.newSegment({ value: event.target.text, expandable: true}))\r\n      this.setTargetWithElements()\r\n    }\r\n\r\n    // reset the + button\r\n    var plusButton = this.uiSegmentSrv.newPlusButton()\r\n    this.elementSegment.value = plusButton.value\r\n    this.elementSegment.html = plusButton.html\r\n    this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  segmentValueChanged(segment, index) {\r\n    if(segment.value== \"-REMOVE-\"){\r\n      var targets = this.target.target.split(';');\r\n      this.segments.splice(index, 1);\r\n      targets.splice(index, 1);\r\n      this.target.target = targets.join(';');\r\n    }\r\n    else{\r\n      var targets = this.target.target.split(';');\r\n      this.segments[index] = segment;\r\n      targets[index] = segment.value;\r\n      this.target.target = targets.join(';');\r\n    }\r\n    \r\n    \r\n  }\r\n  // #endregion\r\n\r\n  // #region Phasors\r\n  getPhasorSegmentsToEdit() {\r\n      var ctrl = this;\r\n      var option = null;\r\n      if (event.target.value != \"\") option = event.target.value;\r\n\r\n      var ctrl = this;\r\n      return this.datasource.phasorFindQuery(option).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n          altSegments.unshift(ctrl.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.phasorSegments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n\r\n  }\r\n\r\n  getPhasorSegmentsToAddNew() {\r\n      var ctrl = this;\r\n      var option = null;\r\n      if (event.target.value != \"\") option = event.target.value;\r\n      return this.datasource.phasorFindQuery(option).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.phasorSegments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n\r\n  }\r\n\r\n\r\n  addPhasorSegment() {\r\n      // if value is not empty, add new attribute segment\r\n      if (event.target.text != null) {\r\n          this.phasorSegments.push(this.uiSegmentSrv.newSegment({ value: event.target.text, expandable: true }))\r\n          this.setTargetWithPhasors()\r\n      }\r\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      this.phasorSegment.value = plusButton.value\r\n      this.phasorSegment.html = plusButton.html\r\n      this.panelCtrl.refresh()\r\n\r\n  }\r\n\r\n  phasorValueChanged(segment, index) {\r\n      if (segment.value == \"-REMOVE-\") {\r\n          var targets = this.target.target.split(';');\r\n          this.phasorSegments.splice(index, 1);\r\n          targets.splice(index, 1);\r\n          this.target.target = targets.join(';');\r\n      }\r\n      else {\r\n          var targets = this.target.target.split(';');\r\n          this.phasorSegments[index] = segment;\r\n          targets[index] = segment.value;\r\n          this.target.target = targets.join(';');\r\n      }\r\n\r\n\r\n  }\r\n  // #endregion\r\n\r\n  // #region TOP N\r\n  topNValueChanged() {\r\n      this.setTargetWithQuery();\r\n  }\r\n  // #endregion\r\n\r\n  // #region Wheres\r\n  getWheresToEdit(where, index) {\r\n\r\n      if (where.type === 'operator') {\r\n          return this.datasource.q.when(this.uiSegmentSrv.newOperators(['=', '<>', '<', '<=', '>', '>=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'IS', 'IS NOT']));\r\n      }\r\n      else if (where.type === 'value') {\r\n          return this.datasource.q.when(null);\r\n      }\r\n      else if (where.type === 'condition') {\r\n          return this.datasource.q.when([this.uiSegmentSrv.newCondition('AND'), this.uiSegmentSrv.newCondition('OR')]);\r\n      }\r\n      else {\r\n          return this.datasource.whereFindQuery(this.filterSegment.value).then(data => {\r\n              var altSegments = _.map(data, item => {\r\n                  return this.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n              });\r\n              altSegments.sort((a, b) => {\r\n                  if (a.value < b.value)\r\n                      return -1;\r\n                  if (a.value > b.value)\r\n                      return 1;\r\n                  return 0;\r\n              });\r\n              altSegments.unshift(this.uiSegmentSrv.newSegment('-REMOVE-'));\r\n              return _.filter(altSegments, segment => {\r\n                  return _.find(this.segments, x => {\r\n                      return x.value == segment.value\r\n                  }) == undefined;\r\n              });\r\n          });\r\n      }\r\n\r\n  }\r\n\r\n  whereValueChanged(where, index) {\r\n\r\n      if (where.value == \"-REMOVE-\") {\r\n          if (index == 0 && this.wheres.length > 3 && this.wheres[index + 3].type == 'condition') \r\n              this.wheres.splice(index, 4)\r\n          else if (index > 0 && this.wheres[index - 1].type == 'condition')\r\n              this.wheres.splice(index - 1, 4)\r\n          else\r\n              this.wheres.splice(index, 3)\r\n      }\r\n\r\n      if (where.type == 'operator')\r\n          this.wheres[index] = this.uiSegmentSrv.newOperator(where.value)\r\n      else if (where.type == 'condition')\r\n          this.wheres[index] = this.uiSegmentSrv.newCondition(where.value)\r\n\r\n      this.setTargetWithQuery();\r\n  }\r\n\r\n  getWheresToAddNew() {\r\n      var ctrl = this;\r\n      return this.datasource.whereFindQuery(ctrl.filterSegment.value).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  addWhere() {\r\n      if (this.wheres.length > 0) \r\n          this.wheres.push(this.uiSegmentSrv.newCondition('AND'));\r\n\r\n      this.wheres.push(this.uiSegmentSrv.newSegment(event.target.text));\r\n      this.wheres.push(this.uiSegmentSrv.newOperator('NOT LIKE'));\r\n      this.wheres.push(this.uiSegmentSrv.newFake(\"''\", 'value', 'query-segment-value'));\r\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      this.whereSegment.value = plusButton.value\r\n      this.whereSegment.html = plusButton.html\r\n      this.setTargetWithQuery();\r\n\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Filters\r\n  getFilterToEdit() {\r\n      var ctrl = this;\r\n      return this.datasource.filterFindQuery().then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  filterValueChanged() {\r\n      //this.target.policy = this.topNSegment;\r\n      this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      this.wheres = [];\r\n      this.setTargetWithQuery();\r\n\r\n      this.panelCtrl.refresh();\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region OrderBys\r\n  getOrderBysToAddNew() {\r\n      var ctrl = this;\r\n      return this.datasource.orderByFindQuery(ctrl.filterSegment.value).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable })\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          if(this.orderBySegment.type !== 'plus-button')\r\n            altSegments.unshift(this.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.segments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  orderByValueChanged() {\r\n      if (event.target.text == \"-REMOVE-\")\r\n          this.orderBySegment = this.uiSegmentSrv.newPlusButton();\r\n      else\r\n        this.orderBySegment = this.uiSegmentSrv.newSegment(event.target.text);\r\n      this.setTargetWithQuery();\r\n\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Functions\r\n  getFunctionsToAddNew() {\r\n      var ctrl = this;\r\n      var array = []\r\n      _.each(Object.keys(this.functionList), function (element, index, list) {\r\n          array.push(ctrl.uiSegmentSrv.newSegment(element));\r\n      });\r\n\r\n      if (this.functions.length == 0) array = array.slice(2,array.length);\r\n\r\n      return this.datasource.q.when(_.filter( array, segment => {\r\n          return _.find(this.functions, x => {\r\n              return x.value == segment.value;\r\n          }) == undefined;\r\n      }));\r\n  }\r\n\r\n  getFunctionsToEdit(func, index) {\r\n      var ctrl = this;\r\n      var remove = [this.uiSegmentSrv.newSegment('-REMOVE-')];\r\n      if (func.type == 'Operator') return this.datasource.q.when();\r\n      else if (func.value == 'Set') return this.datasource.q.when(remove)\r\n\r\n      return this.datasource.q.when(remove);\r\n  }\r\n\r\n  functionValueChanged(func, index) {\r\n      var funcSeg = this.functionList[func.Function];\r\n\r\n      if (func.value == \"-REMOVE-\") {\r\n          var l = 1;\r\n          var fi = _.findIndex(this.functionSegments, function (segment) { return segment.Function == func.Function });\r\n          if (func.Function == 'Slice')\r\n              this.functionSegments[fi + 1].Parameters = this.functionSegments[fi + 1].Parameters.slice(1, this.functionSegments[fi + 1].Parameters.length);\r\n          else if (fi > 0 && (this.functionSegments[fi - 1].Function == 'Set' || this.functionSegments[fi - 1].Function == 'Slice')) {\r\n              --fi;\r\n                ++l;\r\n          }\r\n\r\n          this.functionSegments.splice(fi,l);\r\n      }\r\n      else if (func.Type != 'Function') {\r\n          var fi = _.findIndex(this.functionSegments, function (segment) { return segment.Function == func.Function });\r\n          this.functionSegments[fi].Parameters[func.Index].Default = func.value;\r\n      }\r\n\r\n      this.buildFunctionArray()\r\n\r\n      if (this.queryType == 'Filter Expression')\r\n          this.setTargetWithQuery();\r\n      else\r\n          this.setTargetWithElements() \r\n\r\n  }\r\n\r\n  addFunctionSegment() {\r\n      var func = this.functionList[event.target.text];\r\n\r\n      if (func.Function == 'Slice') {\r\n          this.functionSegments[0].Parameters.unshift(func.Parameters[0])\r\n      }\r\n\r\n      this.functionSegments.unshift(JSON.parse(JSON.stringify(func)));\r\n      this.buildFunctionArray();\r\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      this.functionSegment.value = plusButton.value\r\n      this.functionSegment.html = plusButton.html\r\n\r\n      if (this.queryType == 'Filter Expression')\r\n          this.setTargetWithQuery();\r\n      else\r\n          this.setTargetWithElements()\r\n  }\r\n\r\n  buildFunctionArray() {\r\n      var ctrl = this;\r\n      ctrl.functions = [];\r\n\r\n      if (this.functionSegments.length == 0) return;\r\n\r\n      _.each(ctrl.functionSegments, function (element, index, list) {\r\n          var newElement = ctrl.uiSegmentSrv.newSegment(element.Function)\r\n          newElement.Type = 'Function';\r\n          newElement.Function = element.Function;\r\n\r\n          ctrl.functions.push(newElement)\r\n\r\n          if (newElement.value == 'Set' || newElement.value == 'Slice') return;\r\n\r\n          var operator = ctrl.uiSegmentSrv.newOperator('(');\r\n          operator.Type = 'Operator';\r\n          ctrl.functions.push(operator);\r\n\r\n          _.each(element.Parameters, function (param, i, j) {\r\n              var d = ctrl.uiSegmentSrv.newFake(param.Default.toString());\r\n              d.Type = param.Type;\r\n              d.Function = element.Function;\r\n              d.Description = param.Description;\r\n              d.Index = i;\r\n              ctrl.functions.push(d);\r\n\r\n              var operator = ctrl.uiSegmentSrv.newOperator(',');\r\n              operator.Type = 'Operator';\r\n              ctrl.functions.push(operator);\r\n          })\r\n\r\n      });\r\n\r\n      var query = ctrl.uiSegmentSrv.newCondition('QUERY');\r\n      query.Type = 'Query';\r\n      ctrl.functions.push(query);\r\n\r\n      for (var i in ctrl.functionSegments) {\r\n          if (ctrl.functionSegments[i].Function != 'Set' && ctrl.functionSegments[i].Function != 'Slice') {\r\n              var operator = ctrl.uiSegmentSrv.newOperator(')');\r\n              operator.Type = 'Operator';\r\n              ctrl.functions.push(operator);\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  getBooleans() {\r\n      var array = [\r\n          this.uiSegmentSrv.newSegment('true'),\r\n          this.uiSegmentSrv.newSegment('false')\r\n      ];\r\n      return this.datasource.q.when(array);\r\n  }\r\n\r\n  getAngleUnits() {\r\n      var array = [\r\n          this.uiSegmentSrv.newSegment('Degrees'),\r\n          this.uiSegmentSrv.newSegment('Radians'),\r\n          this.uiSegmentSrv.newSegment('Grads'),\r\n          this.uiSegmentSrv.newSegment('ArcMinutes'),\r\n          this.uiSegmentSrv.newSegment('ArcSeconds'),\r\n          this.uiSegmentSrv.newSegment('AngularMil')\r\n      ];\r\n      return this.datasource.q.when(array);\r\n  }\r\n\r\n  getTimeSelect() {\r\n      var array = [\r\n          this.uiSegmentSrv.newSegment('Weeks'),\r\n          this.uiSegmentSrv.newSegment('Days'),\r\n          this.uiSegmentSrv.newSegment('Hours'),\r\n          this.uiSegmentSrv.newSegment('Minutes'),\r\n          this.uiSegmentSrv.newSegment('Seconds'),\r\n          this.uiSegmentSrv.newSegment('Milliseconds'),\r\n          this.uiSegmentSrv.newSegment('Microseconds'),\r\n          this.uiSegmentSrv.newSegment('Nanoseconds'),\r\n          this.uiSegmentSrv.newSegment('Ticks'),\r\n          this.uiSegmentSrv.newSegment('PlanckTime'),\r\n          this.uiSegmentSrv.newSegment('AtomicUnitsOfTime'),\r\n          this.uiSegmentSrv.newSegment('Ke')\r\n      ];\r\n      return this.datasource.q.when(array);\r\n  }\r\n\r\n  inputChange(func, index) {\r\n      var ctrl = this;\r\n      clearTimeout(this.typingTimer);\r\n      this.typingTimer = setTimeout(function () { ctrl.functionValueChanged(func, index) }, 1000);\r\n      event.target.focus()\r\n      \r\n  }\r\n\r\n  // #endregion\r\n\r\n}\r\n\r\nOpenHistorianDataSourceQueryCtrl.templateUrl ='partial/query.editor.html';"]}