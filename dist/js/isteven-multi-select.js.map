{"version":3,"sources":["../../src/js/isteven-multi-select.js"],"names":["angular","module","directive","$sce","$timeout","$templateCache","restrict","scope","inputModel","outputModel","isDisabled","onClear","onClose","onSearchChange","onItemClick","onOpen","onReset","onSelectAll","onSelectNone","translation","templateUrl","link","$scope","element","attrs","backUp","varButtonLabel","spacingProperty","indexProperty","orientationH","orientationV","filteredModel","inputLabel","labelFilter","tabIndex","lang","helperStatus","all","none","reset","filter","prevTabIndex","helperItems","helperItemsLength","checkBoxLayer","scrolled","selectedItems","formElements","vMinSearchLength","clickedItem","clearClicked","e","updateFilter","select","numberToArray","num","Array","searchChanged","length","i","groupProperty","push","gotData","searchProperty","key","String","toUpperCase","indexOf","pop","reverse","getFormElements","filterObj","forEach","value","tempObj","copy","index","data","keyword","result","selectButtons","inputField","checkboxes","clearButton","children","next","getElementsByTagName","isGroupMarker","item","type","removeGroupEndMarker","syncItems","ng_repeat_index","preventDefault","stopPropagation","disableProperty","selectionMode","j","k","startIndex","endIndex","tempArr","nestLevel","allTicked","tickProperty","inputModelIndex","refreshOutputModel","refreshButton","target","focus","removeFocusStyle","setFocusStyle","toggleCheckboxes","outputProps","outputProperties","split","value1","key1","temp","ctr","nothingSelected","tempMaxLabels","maxLabels","more","writeLabel","trustAsHtml","itemIsDisabled","label","reduce","prev","current","clickedEl","document","off","externalClickListener","keyboardListener","hasClass","removeClass","blur","addClass","on","helperContainer","querySelector","targetsArr","find","tagName","previousSibling","helperIndex","genRandomString","possible","charAt","Math","floor","random","prepareGrouping","spacing","prepareIndex","keyCode","which","isNavigationKey","shiftKey","disabled","actEl","activeElement","parent","directiveId","tempStr","orientation","maxHeight","layer","attr","property","hasOwnProperty","helperElements","icon","selectAll","selectNone","tickMark","search","MinSearchLength","parseInt","$watch","newVal","onTouchStart","$apply","bind","onTouchMove","$on","unbind","run","template","put"],"mappings":"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","file":"isteven-multi-select.js","sourcesContent":["/* \r\n * Angular JS Multi Select\r\n * Creates a dropdown-like button with checkboxes. \r\n *\r\n * Project started on: Tue, 14 Jan 2014 - 5:18:02 PM\r\n * Current version: 4.0.0\r\n * \r\n * Released under the MIT License\r\n * --------------------------------------------------------------------------------\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 Ignatius Steven (https://github.com/isteven)\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy \r\n * of this software and associated documentation files (the \"Software\"), to deal \r\n * in the Software without restriction, including without limitation the rights \r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell \r\n * copies of the Software, and to permit persons to whom the Software is \r\n * furnished to do so, subject to the following conditions: \r\n *\r\n * The above copyright notice and this permission notice shall be included in all \r\n * copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\n * SOFTWARE.\r\n * --------------------------------------------------------------------------------\r\n */\r\n\r\n'use strict'\r\n\r\nangular.module( 'isteven-multi-select', ['ng'] ).directive( 'istevenMultiSelect' , [ '$sce', '$timeout', '$templateCache', function ( $sce, $timeout, $templateCache ) {\r\n    return {\r\n        restrict: \r\n            'AE',\r\n\r\n        scope: \r\n        {   \r\n            // models\r\n            inputModel      : '=',\r\n            outputModel     : '=',\r\n\r\n            // settings based on attribute\r\n            isDisabled      : '=',\r\n\r\n            // callbacks\r\n            onClear         : '&',  \r\n            onClose         : '&',\r\n            onSearchChange  : '&',  \r\n            onItemClick     : '&',            \r\n            onOpen          : '&', \r\n            onReset         : '&',  \r\n            onSelectAll     : '&',  \r\n            onSelectNone    : '&',  \r\n\r\n            // i18n\r\n            translation     : '='   \r\n        },\r\n        \r\n        /* \r\n         * The rest are attributes. They don't need to be parsed / binded, so we can safely access them by value.\r\n         * - buttonLabel, directiveId, helperElements, itemLabel, maxLabels, orientation, selectionMode, minSearchLength,\r\n         *   tickProperty, disableProperty, groupProperty, searchProperty, maxHeight, outputProperties\r\n         */\r\n                                                         \r\n         templateUrl: \r\n            'isteven-multi-select.htm',                            \r\n\r\n        link: function ( $scope, element, attrs ) {                       \r\n\r\n            $scope.backUp           = [];\r\n            $scope.varButtonLabel   = '';               \r\n            $scope.spacingProperty  = '';\r\n            $scope.indexProperty    = '';                        \r\n            $scope.orientationH     = false;\r\n            $scope.orientationV     = true;\r\n            $scope.filteredModel    = [];\r\n            $scope.inputLabel       = { labelFilter: '' };                        \r\n            $scope.tabIndex         = 0;            \r\n            $scope.lang             = {};\r\n            $scope.helperStatus     = {\r\n                all     : true,\r\n                none    : true,\r\n                reset   : true,\r\n                filter  : true\r\n            };\r\n\r\n            var \r\n                prevTabIndex        = 0,\r\n                helperItems         = [],\r\n                helperItemsLength   = 0,\r\n                checkBoxLayer       = '',\r\n                scrolled            = false,\r\n                selectedItems       = [],\r\n                formElements        = [],\r\n                vMinSearchLength    = 0,\r\n                clickedItem         = null                \r\n\r\n            // v3.0.0\r\n            // clear button clicked\r\n            $scope.clearClicked = function( e ) {                \r\n                $scope.inputLabel.labelFilter = '';\r\n                $scope.updateFilter();\r\n                $scope.select( 'clear', e );                \r\n            }\r\n\r\n            // A little hack so that AngularJS ng-repeat can loop using start and end index like a normal loop\r\n            // http://stackoverflow.com/questions/16824853/way-to-ng-repeat-defined-number-of-times-instead-of-repeating-over-array\r\n            $scope.numberToArray = function( num ) {\r\n                return new Array( num );   \r\n            }\r\n\r\n            // Call this function when user type on the filter field\r\n            $scope.searchChanged = function() {                                                \r\n                if ( $scope.inputLabel.labelFilter.length < vMinSearchLength && $scope.inputLabel.labelFilter.length > 0 ) {\r\n                    return false;\r\n                }                \r\n                $scope.updateFilter();\r\n            }\r\n\r\n            $scope.updateFilter = function()\r\n            {      \r\n                // we check by looping from end of input-model\r\n                $scope.filteredModel = [];\r\n                var i = 0;\r\n\r\n                if ( typeof $scope.inputModel === 'undefined' ) {\r\n                    return false;                   \r\n                }\r\n\r\n                for( i = $scope.inputModel.length - 1; i >= 0; i-- ) {\r\n\r\n                    // if it's group end, we push it to filteredModel[];\r\n                    if ( typeof $scope.inputModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.inputModel[ i ][ attrs.groupProperty ] === false ) {\r\n                        $scope.filteredModel.push( $scope.inputModel[ i ] );\r\n                    }\r\n                    \r\n                    // if it's data \r\n                    var gotData = false;\r\n                    if ( typeof $scope.inputModel[ i ][ attrs.groupProperty ] === 'undefined' ) {                        \r\n                        \r\n                        // If we set the search-key attribute, we use this loop. \r\n                        if ( typeof attrs.searchProperty !== 'undefined' && attrs.searchProperty !== '' ) {\r\n\r\n                            for (var key in $scope.inputModel[ i ]  ) {\r\n                                if ( \r\n                                    typeof $scope.inputModel[ i ][ key ] !== 'boolean'\r\n                                    && String( $scope.inputModel[ i ][ key ] ).toUpperCase().indexOf( $scope.inputLabel.labelFilter.toUpperCase() ) >= 0                                     \r\n                                    && attrs.searchProperty.indexOf( key ) > -1\r\n                                ) {\r\n                                    gotData = true;\r\n                                    break;\r\n                                }\r\n                            }                        \r\n                        }\r\n                        // if there's no search-key attribute, we use this one. Much better on performance.\r\n                        else {\r\n                            for ( var key in $scope.inputModel[ i ]  ) {\r\n                                if ( \r\n                                    typeof $scope.inputModel[ i ][ key ] !== 'boolean'\r\n                                    && String( $scope.inputModel[ i ][ key ] ).toUpperCase().indexOf( $scope.inputLabel.labelFilter.toUpperCase() ) >= 0                                     \r\n                                ) {\r\n                                    gotData = true;\r\n                                    break;\r\n                                }\r\n                            }                        \r\n                        }\r\n\r\n                        if ( gotData === true ) {    \r\n                            // push\r\n                            $scope.filteredModel.push( $scope.inputModel[ i ] );\r\n                        }\r\n                    }\r\n\r\n                    // if it's group start\r\n                    if ( typeof $scope.inputModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.inputModel[ i ][ attrs.groupProperty ] === true ) {\r\n\r\n                        if ( typeof $scope.filteredModel[ $scope.filteredModel.length - 1 ][ attrs.groupProperty ] !== 'undefined' \r\n                                && $scope.filteredModel[ $scope.filteredModel.length - 1 ][ attrs.groupProperty ] === false ) {\r\n                            $scope.filteredModel.pop();\r\n                        }\r\n                        else {\r\n                            $scope.filteredModel.push( $scope.inputModel[ i ] );\r\n                        }\r\n                    }\r\n                }                \r\n\r\n                $scope.filteredModel.reverse();  \r\n                \r\n                $timeout( function() {                    \r\n\r\n                    $scope.getFormElements();               \r\n                    \r\n                    // Callback: on filter change                      \r\n                    if ( $scope.inputLabel.labelFilter.length > vMinSearchLength ) {\r\n\r\n                        var filterObj = [];\r\n\r\n                        angular.forEach( $scope.filteredModel, function( value, key ) {\r\n                            if ( typeof value !== 'undefined' ) {                   \r\n                                if ( typeof value[ attrs.groupProperty ] === 'undefined' ) {                                                                    \r\n                                    var tempObj = angular.copy( value );\r\n                                    var index = filterObj.push( tempObj );                                \r\n                                    delete filterObj[ index - 1 ][ $scope.indexProperty ];\r\n                                    delete filterObj[ index - 1 ][ $scope.spacingProperty ];      \r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        $scope.onSearchChange({ \r\n                            data: \r\n                            {\r\n                                keyword: $scope.inputLabel.labelFilter, \r\n                                result: filterObj \r\n                            } \r\n                        });\r\n                    }\r\n                },0);\r\n            };\r\n\r\n            // List all the input elements. We need this for our keyboard navigation.\r\n            // This function will be called everytime the filter is updated. \r\n            // Depending on the size of filtered mode, might not good for performance, but oh well..\r\n            $scope.getFormElements = function() {                                     \r\n                formElements = [];\r\n\r\n                var \r\n                    selectButtons   = [],\r\n                    inputField      = [],\r\n                    checkboxes      = [],\r\n                    clearButton     = [];\r\n                \r\n                // If available, then get select all, select none, and reset buttons\r\n                if ( $scope.helperStatus.all || $scope.helperStatus.none || $scope.helperStatus.reset ) {                                                       \r\n                    selectButtons = element.children().children().next().children().children()[ 0 ].getElementsByTagName( 'button' );                    \r\n                    // If available, then get the search box and the clear button\r\n                    if ( $scope.helperStatus.filter ) {                                            \r\n                        // Get helper - search and clear button. \r\n                        inputField =    element.children().children().next().children().children().next()[ 0 ].getElementsByTagName( 'input' );                    \r\n                        clearButton =   element.children().children().next().children().children().next()[ 0 ].getElementsByTagName( 'button' );                        \r\n                    }\r\n                }\r\n                else {\r\n                    if ( $scope.helperStatus.filter ) {   \r\n                        // Get helper - search and clear button. \r\n                        inputField =    element.children().children().next().children().children()[ 0 ].getElementsByTagName( 'input' );                    \r\n                        clearButton =   element.children().children().next().children().children()[ 0 ].getElementsByTagName( 'button' );\r\n                    }\r\n                }\r\n               \r\n                // Get checkboxes\r\n                if ( !$scope.helperStatus.all && !$scope.helperStatus.none && !$scope.helperStatus.reset && !$scope.helperStatus.filter ) {\r\n                    checkboxes = element.children().children().next()[ 0 ].getElementsByTagName( 'input' );\r\n                }\r\n                else {\r\n                    checkboxes = element.children().children().next().children().next()[ 0 ].getElementsByTagName( 'input' );\r\n                }\r\n\r\n                // Push them into global array formElements[] \r\n                for ( var i = 0; i < selectButtons.length ; i++ )   { formElements.push( selectButtons[ i ] );  }\r\n                for ( var i = 0; i < inputField.length ; i++ )      { formElements.push( inputField[ i ] );     }\r\n                for ( var i = 0; i < clearButton.length ; i++ )     { formElements.push( clearButton[ i ] );    }\r\n                for ( var i = 0; i < checkboxes.length ; i++ )      { formElements.push( checkboxes[ i ] );     }                                \r\n            }            \r\n\r\n            // check if an item has attrs.groupProperty (be it true or false)\r\n            $scope.isGroupMarker = function( item , type ) {\r\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === type ) return true; \r\n                return false;\r\n            }\r\n\r\n            $scope.removeGroupEndMarker = function( item ) {\r\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === false ) return false; \r\n                return true;\r\n            }                       \r\n\r\n            // call this function when an item is clicked\r\n            $scope.syncItems = function( item, e, ng_repeat_index ) {                                      \r\n\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                // if the directive is globaly disabled, do nothing\r\n                if ( typeof attrs.disableProperty !== 'undefined' && item[ attrs.disableProperty ] === true ) {                                        \r\n                    return false;\r\n                }\r\n\r\n                // if item is disabled, do nothing\r\n                if ( typeof attrs.isDisabled !== 'undefined' && $scope.isDisabled === true ) {                        \r\n                    return false;\r\n                }                                \r\n\r\n                // if end group marker is clicked, do nothing\r\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === false ) {\r\n                    return false;\r\n                }                \r\n\r\n                var index = $scope.filteredModel.indexOf( item );       \r\n\r\n                // if the start of group marker is clicked ( only for multiple selection! )\r\n                // how it works:\r\n                // - if, in a group, there are items which are not selected, then they all will be selected\r\n                // - if, in a group, all items are selected, then they all will be de-selected                \r\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === true ) {                                  \r\n\r\n                    // this is only for multiple selection, so if selection mode is single, do nothing\r\n                    if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' ) {\r\n                        return false;\r\n                    }\r\n                    \r\n                    var i,j,k;\r\n                    var startIndex = 0;\r\n                    var endIndex = $scope.filteredModel.length - 1;\r\n                    var tempArr = [];\r\n\r\n                    // nest level is to mark the depth of the group.\r\n                    // when you get into a group (start group marker), nestLevel++\r\n                    // when you exit a group (end group marker), nextLevel--\r\n                    var nestLevel = 0;                    \r\n\r\n                    // we loop throughout the filtered model (not whole model)\r\n                    for( i = index ; i < $scope.filteredModel.length ; i++) {  \r\n\r\n                        // this break will be executed when we're done processing each group\r\n                        if ( nestLevel === 0 && i > index ) \r\n                        {\r\n                            break;\r\n                        }\r\n                    \r\n                        if ( typeof $scope.filteredModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.filteredModel[ i ][ attrs.groupProperty ] === true ) {\r\n                            \r\n                            // To cater multi level grouping\r\n                            if ( tempArr.length === 0 ) {\r\n                                startIndex = i + 1; \r\n                            }                            \r\n                            nestLevel = nestLevel + 1;\r\n                        }                                                \r\n\r\n                        // if group end\r\n                        else if ( typeof $scope.filteredModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.filteredModel[ i ][ attrs.groupProperty ] === false ) {\r\n\r\n                            nestLevel = nestLevel - 1;                            \r\n\r\n                            // cek if all are ticked or not                            \r\n                            if ( tempArr.length > 0 && nestLevel === 0 ) {                                \r\n\r\n                                var allTicked = true;       \r\n\r\n                                endIndex = i;\r\n\r\n                                for ( j = 0; j < tempArr.length ; j++ ) {                                \r\n                                    if ( typeof tempArr[ j ][ $scope.tickProperty ] !== 'undefined' &&  tempArr[ j ][ $scope.tickProperty ] === false ) {\r\n                                        allTicked = false;\r\n                                        break;\r\n                                    }\r\n                                }                                                                                    \r\n\r\n                                if ( allTicked === true ) {\r\n                                    for ( j = startIndex; j <= endIndex ; j++ ) {\r\n                                        if ( typeof $scope.filteredModel[ j ][ attrs.groupProperty ] === 'undefined' ) {\r\n                                            if ( typeof attrs.disableProperty === 'undefined' ) {\r\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = false;\r\n                                                // we refresh input model as well\r\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];\r\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = false;\r\n                                            }\r\n                                            else if ( $scope.filteredModel[ j ][ attrs.disableProperty ] !== true ) {\r\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = false;\r\n                                                // we refresh input model as well\r\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];\r\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = false;\r\n                                            }\r\n                                        }\r\n                                    }                                \r\n                                }\r\n\r\n                                else {\r\n                                    for ( j = startIndex; j <= endIndex ; j++ ) {\r\n                                        if ( typeof $scope.filteredModel[ j ][ attrs.groupProperty ] === 'undefined' ) {\r\n                                            if ( typeof attrs.disableProperty === 'undefined' ) {\r\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = true;                                                \r\n                                                // we refresh input model as well\r\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];\r\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = true;\r\n\r\n                                            }                                            \r\n                                            else if ( $scope.filteredModel[ j ][ attrs.disableProperty ] !== true ) {\r\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = true;\r\n                                                // we refresh input model as well\r\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];\r\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = true;\r\n                                            }\r\n                                        }\r\n                                    }                                \r\n                                }                                                                                    \r\n                            }\r\n                        }\r\n            \r\n                        // if data\r\n                        else {                            \r\n                            tempArr.push( $scope.filteredModel[ i ] );                                                                                    \r\n                        }\r\n                    }                                 \r\n                }\r\n\r\n                // if an item (not group marker) is clicked\r\n                else {\r\n\r\n                    // If it's single selection mode\r\n                    if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' ) {\r\n                        \r\n                        // first, set everything to false\r\n                        for( i=0 ; i < $scope.filteredModel.length ; i++) {                            \r\n                            $scope.filteredModel[ i ][ $scope.tickProperty ] = false;                            \r\n                        }        \r\n                        for( i=0 ; i < $scope.inputModel.length ; i++) {                            \r\n                            $scope.inputModel[ i ][ $scope.tickProperty ] = false;                            \r\n                        }        \r\n                        \r\n                        // then set the clicked item to true\r\n                        $scope.filteredModel[ index ][ $scope.tickProperty ] = true;                                                                 \r\n                    }   \r\n\r\n                    // Multiple\r\n                    else {\r\n                        $scope.filteredModel[ index ][ $scope.tickProperty ]   = !$scope.filteredModel[ index ][ $scope.tickProperty ];\r\n                    }\r\n\r\n                    // we refresh input model as well\r\n                    var inputModelIndex = $scope.filteredModel[ index ][ $scope.indexProperty ];                                        \r\n                    $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = $scope.filteredModel[ index ][ $scope.tickProperty ];                    \r\n                }                                  \r\n\r\n                // we execute the callback function here\r\n                clickedItem = angular.copy( item );                                                    \r\n                if ( clickedItem !== null ) {                        \r\n                    $timeout( function() {\r\n                        delete clickedItem[ $scope.indexProperty ];\r\n                        delete clickedItem[ $scope.spacingProperty ];      \r\n                        $scope.onItemClick( { data: clickedItem } );\r\n                        clickedItem = null;                    \r\n                    }, 0 );                                                 \r\n                }                                    \r\n                \r\n                $scope.refreshOutputModel();\r\n                $scope.refreshButton();                              \r\n\r\n                // We update the index here\r\n                prevTabIndex = $scope.tabIndex;\r\n                $scope.tabIndex = ng_repeat_index + helperItemsLength;\r\n                                \r\n                // Set focus on the hidden checkbox \r\n                e.target.focus();\r\n\r\n                // set & remove CSS style\r\n                $scope.removeFocusStyle( prevTabIndex );\r\n                $scope.setFocusStyle( $scope.tabIndex );\r\n\r\n                if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' ) {\r\n                    // on single selection mode, we then hide the checkbox layer\r\n                    $scope.toggleCheckboxes( e );       \r\n                }\r\n            }     \r\n\r\n            // update $scope.outputModel\r\n            $scope.refreshOutputModel = function() {            \r\n                \r\n                $scope.outputModel  = [];\r\n                var \r\n                    outputProps     = [],\r\n                    tempObj         = {};\r\n\r\n                // v4.0.0\r\n                if ( typeof attrs.outputProperties !== 'undefined' ) {                    \r\n                    outputProps = attrs.outputProperties.split(' ');                \r\n                    angular.forEach( $scope.inputModel, function( value, key ) {                    \r\n                        if ( \r\n                            typeof value !== 'undefined' \r\n                            && typeof value[ attrs.groupProperty ] === 'undefined' \r\n                            && value[ $scope.tickProperty ] === true \r\n                        ) {\r\n                            tempObj         = {};\r\n                            angular.forEach( value, function( value1, key1 ) {                                \r\n                                if ( outputProps.indexOf( key1 ) > -1 ) {                                                                         \r\n                                    tempObj[ key1 ] = value1;                                    \r\n                                }\r\n                            });\r\n                            var index = $scope.outputModel.push( tempObj );                                                               \r\n                            delete $scope.outputModel[ index - 1 ][ $scope.indexProperty ];\r\n                            delete $scope.outputModel[ index - 1 ][ $scope.spacingProperty ];                                      \r\n                        }\r\n                    });         \r\n                }\r\n                else {\r\n                    angular.forEach( $scope.inputModel, function( value, key ) {                    \r\n                        if ( \r\n                            typeof value !== 'undefined' \r\n                            && typeof value[ attrs.groupProperty ] === 'undefined' \r\n                            && value[ $scope.tickProperty ] === true \r\n                        ) {\r\n                            var temp = angular.copy( value );\r\n                            var index = $scope.outputModel.push( temp );                                                               \r\n                            delete $scope.outputModel[ index - 1 ][ $scope.indexProperty ];\r\n                            delete $scope.outputModel[ index - 1 ][ $scope.spacingProperty ];                                      \r\n                        }\r\n                    });         \r\n                }\r\n            }\r\n\r\n            // refresh button label\r\n            $scope.refreshButton = function() {\r\n\r\n                $scope.varButtonLabel   = '';                \r\n                var ctr                 = 0;                  \r\n\r\n                // refresh button label...\r\n                if ( $scope.outputModel.length === 0 ) {\r\n                    // https://github.com/isteven/angular-multi-select/pull/19                    \r\n                    $scope.varButtonLabel = $scope.lang.nothingSelected;\r\n                }\r\n                else {                \r\n                    var tempMaxLabels = $scope.outputModel.length;\r\n                    if ( typeof attrs.maxLabels !== 'undefined' && attrs.maxLabels !== '' ) {\r\n                        tempMaxLabels = attrs.maxLabels;\r\n                    }\r\n\r\n                    // if max amount of labels displayed..\r\n                    if ( $scope.outputModel.length > tempMaxLabels ) {\r\n                        $scope.more = true;\r\n                    }\r\n                    else {\r\n                        $scope.more = false;\r\n                    }                \r\n                    \r\n                    angular.forEach( $scope.inputModel, function( value, key ) {\r\n                        if ( typeof value !== 'undefined' && value[ attrs.tickProperty ] === true ) {                        \r\n                            if ( ctr < tempMaxLabels ) {                            \r\n                                $scope.varButtonLabel += ( $scope.varButtonLabel.length > 0 ? '</div>, <div class=\"buttonLabel\">' : '<div class=\"buttonLabel\">') + $scope.writeLabel( value, 'buttonLabel' );\r\n                            }\r\n                            ctr++;\r\n                        }\r\n                    });                \r\n\r\n                    if ( $scope.more === true ) {\r\n                        // https://github.com/isteven/angular-multi-select/pull/16\r\n                        if (tempMaxLabels > 0) {\r\n                            $scope.varButtonLabel += ', ... ';\r\n                        }\r\n                        $scope.varButtonLabel += '(' + $scope.outputModel.length + ')';                        \r\n                    }\r\n                }\r\n                $scope.varButtonLabel = $sce.trustAsHtml( $scope.varButtonLabel + '<span class=\"caret\"></span>' );                \r\n            }\r\n\r\n            // Check if a checkbox is disabled or enabled. It will check the granular control (disableProperty) and global control (isDisabled)\r\n            // Take note that the granular control has higher priority.\r\n            $scope.itemIsDisabled = function( item ) {\r\n                \r\n                if ( typeof attrs.disableProperty !== 'undefined' && item[ attrs.disableProperty ] === true ) {                                        \r\n                    return true;\r\n                }\r\n                else {             \r\n                    if ( $scope.isDisabled === true ) {                        \r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n                \r\n            }\r\n\r\n            // A simple function to parse the item label settings. Used on the buttons and checkbox labels.\r\n            $scope.writeLabel = function( item, type ) {\r\n                \r\n                // type is either 'itemLabel' or 'buttonLabel'\r\n                var temp    = attrs[ type ].split( ' ' );                    \r\n                var label   = '';                \r\n\r\n                angular.forEach( temp, function( value, key ) {                    \r\n                    item[ value ] && ( label += '&nbsp;' + value.split( '.' ).reduce( function( prev, current ) {\r\n                        return prev[ current ]; \r\n                    }, item ));        \r\n                });\r\n                \r\n                if ( type.toUpperCase() === 'BUTTONLABEL' ) {                    \r\n                    return label;\r\n                }\r\n                return $sce.trustAsHtml( label );\r\n            }                                \r\n\r\n            // UI operations to show/hide checkboxes based on click event..\r\n            $scope.toggleCheckboxes = function( e ) {                                    \r\n                \r\n                // We grab the button\r\n                var clickedEl = element.children()[0];\r\n\r\n                // Just to make sure.. had a bug where key events were recorded twice\r\n                angular.element( document ).off( 'click', $scope.externalClickListener );\r\n                angular.element( document ).off( 'keydown', $scope.keyboardListener );        \r\n\r\n                // The idea below was taken from another multi-select directive - https://github.com/amitava82/angular-multiselect \r\n                // His version is awesome if you need a more simple multi-select approach.                                \r\n\r\n                // close\r\n                if ( angular.element( checkBoxLayer ).hasClass( 'show' )) {                         \r\n\r\n                    angular.element( checkBoxLayer ).removeClass( 'show' );                    \r\n                    angular.element( clickedEl ).removeClass( 'buttonClicked' );                    \r\n                    angular.element( document ).off( 'click', $scope.externalClickListener );\r\n                    angular.element( document ).off( 'keydown', $scope.keyboardListener );                                    \r\n\r\n                    // clear the focused element;\r\n                    $scope.removeFocusStyle( $scope.tabIndex );\r\n                    if ( typeof formElements[ $scope.tabIndex ] !== 'undefined' ) {\r\n                        formElements[ $scope.tabIndex ].blur();\r\n                    }\r\n\r\n                    // close callback\r\n                    $timeout( function() {\r\n                        $scope.onClose();\r\n                    }, 0 );\r\n\r\n                    // set focus on button again\r\n                    element.children().children()[ 0 ].focus();\r\n                } \r\n                // open\r\n                else                 \r\n                {    \r\n                    // clear filter\r\n                    $scope.inputLabel.labelFilter = '';                \r\n                    $scope.updateFilter();                                \r\n\r\n                    helperItems = [];\r\n                    helperItemsLength = 0;\r\n\r\n                    angular.element( checkBoxLayer ).addClass( 'show' );\r\n                    angular.element( clickedEl ).addClass( 'buttonClicked' );       \r\n\r\n                    // Attach change event listener on the input filter. \r\n                    // We need this because ng-change is apparently not an event listener.                    \r\n                    angular.element( document ).on( 'click', $scope.externalClickListener );\r\n                    angular.element( document ).on( 'keydown', $scope.keyboardListener );  \r\n\r\n                    // to get the initial tab index, depending on how many helper elements we have. \r\n                    // priority is to always focus it on the input filter                                                                \r\n                    $scope.getFormElements();\r\n                    $scope.tabIndex = 0;\r\n\r\n                    var helperContainer = angular.element( element[ 0 ].querySelector( '.helperContainer' ) )[0];                \r\n                    \r\n                    if ( typeof helperContainer !== 'undefined' ) {\r\n                        for ( var i = 0; i < helperContainer.getElementsByTagName( 'BUTTON' ).length ; i++ ) {\r\n                            helperItems[ i ] = helperContainer.getElementsByTagName( 'BUTTON' )[ i ];\r\n                        }\r\n                        helperItemsLength = helperItems.length + helperContainer.getElementsByTagName( 'INPUT' ).length;\r\n                    }\r\n                    \r\n                    // focus on the filter element on open. \r\n                    if ( element[ 0 ].querySelector( '.inputFilter' ) ) {                        \r\n                        element[ 0 ].querySelector( '.inputFilter' ).focus();    \r\n                        $scope.tabIndex = $scope.tabIndex + helperItemsLength - 2;\r\n                        // blur button in vain\r\n                        angular.element( element ).children()[ 0 ].blur();\r\n                    }\r\n                    // if there's no filter then just focus on the first checkbox item\r\n                    else {                  \r\n                        if ( !$scope.isDisabled ) {                        \r\n                            $scope.tabIndex = $scope.tabIndex + helperItemsLength;\r\n                            if ( $scope.inputModel.length > 0 ) {\r\n                                formElements[ $scope.tabIndex ].focus();\r\n                                $scope.setFocusStyle( $scope.tabIndex );\r\n                                // blur button in vain\r\n                                angular.element( element ).children()[ 0 ].blur();\r\n                            }                            \r\n                        }\r\n                    }                          \r\n\r\n                    // open callback\r\n                    $scope.onOpen();\r\n                }                            \r\n            }\r\n            \r\n            // handle clicks outside the button / multi select layer\r\n            $scope.externalClickListener = function( e ) {                   \r\n\r\n                var targetsArr = element.find( e.target.tagName );\r\n                for (var i = 0; i < targetsArr.length; i++) {                                        \r\n                    if ( e.target == targetsArr[i] ) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                angular.element( checkBoxLayer.previousSibling ).removeClass( 'buttonClicked' );                    \r\n                angular.element( checkBoxLayer ).removeClass( 'show' );\r\n                angular.element( document ).off( 'click', $scope.externalClickListener ); \r\n                angular.element( document ).off( 'keydown', $scope.keyboardListener );                \r\n                \r\n                // close callback                \r\n                $timeout( function() {\r\n                    $scope.onClose();\r\n                }, 0 );\r\n\r\n                // set focus on button again\r\n                element.children().children()[ 0 ].focus();\r\n            }\r\n   \r\n            // select All / select None / reset buttons\r\n            $scope.select = function( type, e ) {\r\n\r\n                var helperIndex = helperItems.indexOf( e.target );\r\n                $scope.tabIndex = helperIndex;\r\n\r\n                switch( type.toUpperCase() ) {\r\n                    case 'ALL':\r\n                        angular.forEach( $scope.filteredModel, function( value, key ) {                            \r\n                            if ( typeof value !== 'undefined' && value[ attrs.disableProperty ] !== true ) {                                \r\n                                if ( typeof value[ attrs.groupProperty ] === 'undefined' ) {                                \r\n                                    value[ $scope.tickProperty ] = true;\r\n                                }\r\n                            }\r\n                        });                            \r\n                        $scope.refreshOutputModel();                                    \r\n                        $scope.refreshButton();                                                  \r\n                        $scope.onSelectAll();                                                \r\n                        break;\r\n                    case 'NONE':\r\n                        angular.forEach( $scope.filteredModel, function( value, key ) {\r\n                            if ( typeof value !== 'undefined' && value[ attrs.disableProperty ] !== true ) {                        \r\n                                if ( typeof value[ attrs.groupProperty ] === 'undefined' ) {                                \r\n                                    value[ $scope.tickProperty ] = false;\r\n                                }\r\n                            }\r\n                        });               \r\n                        $scope.refreshOutputModel();                                    \r\n                        $scope.refreshButton();                                                                          \r\n                        $scope.onSelectNone();                        \r\n                        break;\r\n                    case 'RESET':            \r\n                        angular.forEach( $scope.filteredModel, function( value, key ) {                            \r\n                            if ( typeof value[ attrs.groupProperty ] === 'undefined' && typeof value !== 'undefined' && value[ attrs.disableProperty ] !== true ) {                        \r\n                                var temp = value[ $scope.indexProperty ];                                \r\n                                value[ $scope.tickProperty ] = $scope.backUp[ temp ][ $scope.tickProperty ];\r\n                            }\r\n                        });               \r\n                        $scope.refreshOutputModel();                                    \r\n                        $scope.refreshButton();                                                                          \r\n                        $scope.onReset();                        \r\n                        break;\r\n                    case 'CLEAR':\r\n                        $scope.tabIndex = $scope.tabIndex + 1;\r\n                        $scope.onClear();    \r\n                        break;\r\n                    case 'FILTER':                        \r\n                        $scope.tabIndex = helperItems.length - 1;\r\n                        break;\r\n                    default:                        \r\n                }                                                                                 \r\n            }            \r\n\r\n            // just to create a random variable name                \r\n            function genRandomString( length ) {                \r\n                var possible    = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n                var temp        = '';\r\n                for( var i=0; i < length; i++ ) {\r\n                     temp += possible.charAt( Math.floor( Math.random() * possible.length ));\r\n                }\r\n                return temp;\r\n            }\r\n\r\n            // count leading spaces\r\n            $scope.prepareGrouping = function() {\r\n                var spacing     = 0;                                                \r\n                angular.forEach( $scope.filteredModel, function( value, key ) {\r\n                    value[ $scope.spacingProperty ] = spacing;                    \r\n                    if ( value[ attrs.groupProperty ] === true ) {\r\n                        spacing+=2;\r\n                    }                    \r\n                    else if ( value[ attrs.groupProperty ] === false ) {\r\n                        spacing-=2;\r\n                    }                 \r\n                });\r\n            }\r\n\r\n            // prepare original index\r\n            $scope.prepareIndex = function() {\r\n                var ctr = 0;\r\n                angular.forEach( $scope.filteredModel, function( value, key ) {\r\n                    value[ $scope.indexProperty ] = ctr;\r\n                    ctr++;\r\n                });\r\n            }\r\n\r\n            // navigate using up and down arrow\r\n            $scope.keyboardListener = function( e ) { \r\n                \r\n                var key = e.keyCode ? e.keyCode : e.which;      \r\n                var isNavigationKey = false;                                                \r\n\r\n                // ESC key (close)\r\n                if ( key === 27 ) {\r\n                    e.preventDefault();                   \r\n                    e.stopPropagation();\r\n                    $scope.toggleCheckboxes( e );\r\n                }                    \r\n                \r\n                \r\n                // next element ( tab, down & right key )                    \r\n                else if ( key === 40 || key === 39 || ( !e.shiftKey && key == 9 ) ) {                    \r\n                    \r\n                    isNavigationKey = true;\r\n                    prevTabIndex = $scope.tabIndex; \r\n                    $scope.tabIndex++;                         \r\n                    if ( $scope.tabIndex > formElements.length - 1 ) {\r\n                        $scope.tabIndex = 0;\r\n                        prevTabIndex = formElements.length - 1; \r\n                    }                                                            \r\n                    while ( formElements[ $scope.tabIndex ].disabled === true ) {\r\n                        $scope.tabIndex++;\r\n                        if ( $scope.tabIndex > formElements.length - 1 ) {\r\n                            $scope.tabIndex = 0;                            \r\n                        }                                                                                    \r\n                        if ( $scope.tabIndex === prevTabIndex ) {\r\n                            break;\r\n                        }\r\n                    }              \r\n                }\r\n                  \r\n                // prev element ( shift+tab, up & left key )\r\n                else if ( key === 38 || key === 37 || ( e.shiftKey && key == 9 ) ) { \r\n                    isNavigationKey = true;\r\n                    prevTabIndex = $scope.tabIndex; \r\n                    $scope.tabIndex--;                              \r\n                    if ( $scope.tabIndex < 0 ) {\r\n                        $scope.tabIndex = formElements.length - 1;\r\n                        prevTabIndex = 0;\r\n                    }                                         \r\n                    while ( formElements[ $scope.tabIndex ].disabled === true ) {                        \r\n                        $scope.tabIndex--;\r\n                        if ( $scope.tabIndex === prevTabIndex ) {\r\n                            break;\r\n                        }                                            \r\n                        if ( $scope.tabIndex < 0 ) {\r\n                            $scope.tabIndex = formElements.length - 1;\r\n                        }                             \r\n                    }                                                     \r\n                }                    \r\n\r\n                if ( isNavigationKey === true ) {                                         \r\n                    \r\n                    e.preventDefault();\r\n\r\n                    // set focus on the checkbox                    \r\n                    formElements[ $scope.tabIndex ].focus();    \r\n                    var actEl = document.activeElement;                     \r\n                    \r\n                    if ( actEl.type.toUpperCase() === 'CHECKBOX' ) {                                                   \r\n                        $scope.setFocusStyle( $scope.tabIndex );\r\n                        $scope.removeFocusStyle( prevTabIndex );\r\n                    }                    \r\n                    else {\r\n                        $scope.removeFocusStyle( prevTabIndex );\r\n                        $scope.removeFocusStyle( helperItemsLength );\r\n                        $scope.removeFocusStyle( formElements.length - 1 );\r\n                    } \r\n                }                \r\n\r\n                isNavigationKey = false;\r\n            }\r\n\r\n            // set (add) CSS style on selected row\r\n            $scope.setFocusStyle = function( tabIndex ) {                                \r\n                angular.element( formElements[ tabIndex ] ).parent().parent().parent().addClass( 'multiSelectFocus' );                        \r\n            }\r\n\r\n            // remove CSS style on selected row\r\n            $scope.removeFocusStyle = function( tabIndex ) {                \r\n                angular.element( formElements[ tabIndex ] ).parent().parent().parent().removeClass( 'multiSelectFocus' );\r\n            }\r\n\r\n            /*********************\r\n             *********************             \r\n             *\r\n             * 1) Initializations\r\n             *\r\n             *********************\r\n             *********************/\r\n\r\n            // attrs to $scope - attrs-$scope - attrs - $scope\r\n            // Copy some properties that will be used on the template. They need to be in the $scope.\r\n            $scope.groupProperty    = attrs.groupProperty;   \r\n            $scope.tickProperty     = attrs.tickProperty;\r\n            $scope.directiveId      = attrs.directiveId;\r\n            \r\n            // Unfortunately I need to add these grouping properties into the input model\r\n            var tempStr = genRandomString( 5 );\r\n            $scope.indexProperty = 'idx_' + tempStr;\r\n            $scope.spacingProperty = 'spc_' + tempStr;         \r\n\r\n            // set orientation css            \r\n            if ( typeof attrs.orientation !== 'undefined' ) {\r\n\r\n                if ( attrs.orientation.toUpperCase() === 'HORIZONTAL' ) {                    \r\n                    $scope.orientationH = true;\r\n                    $scope.orientationV = false;\r\n                }\r\n                else \r\n                {\r\n                    $scope.orientationH = false;\r\n                    $scope.orientationV = true;\r\n                }\r\n            }            \r\n\r\n            // get elements required for DOM operation\r\n            checkBoxLayer = element.children().children().next()[0];\r\n\r\n            // set max-height property if provided\r\n            if ( typeof attrs.maxHeight !== 'undefined' ) {                \r\n                var layer = element.children().children().children()[0];\r\n                angular.element( layer ).attr( \"style\", \"height:\" + attrs.maxHeight + \"; overflow-y:scroll;\" );                                \r\n            }\r\n\r\n            // some flags for easier checking            \r\n            for ( var property in $scope.helperStatus ) {\r\n                if ( $scope.helperStatus.hasOwnProperty( property )) {                    \r\n                    if ( \r\n                        typeof attrs.helperElements !== 'undefined' \r\n                        && attrs.helperElements.toUpperCase().indexOf( property.toUpperCase() ) === -1 \r\n                    ) {\r\n                        $scope.helperStatus[ property ] = false;\r\n                    }\r\n                }\r\n            }\r\n            if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' )  {\r\n                $scope.helperStatus[ 'all' ] = false;\r\n                $scope.helperStatus[ 'none' ] = false;\r\n            }\r\n\r\n            // helper button icons.. I guess you can use html tag here if you want to. \r\n            $scope.icon        = {};            \r\n            $scope.icon.selectAll  = '&#10003;';    // a tick icon\r\n            $scope.icon.selectNone = '&times;';     // x icon\r\n            $scope.icon.reset      = '&#8630;';     // undo icon            \r\n            // this one is for the selected items\r\n            $scope.icon.tickMark   = '&#10003;';    // a tick icon \r\n\r\n            // configurable button labels                       \r\n            if ( typeof attrs.translation !== 'undefined' ) {\r\n                $scope.lang.selectAll       = $sce.trustAsHtml( $scope.icon.selectAll  + '&nbsp;&nbsp;' + $scope.translation.selectAll );\r\n                $scope.lang.selectNone      = $sce.trustAsHtml( $scope.icon.selectNone + '&nbsp;&nbsp;' + $scope.translation.selectNone );\r\n                $scope.lang.reset           = $sce.trustAsHtml( $scope.icon.reset      + '&nbsp;&nbsp;' + $scope.translation.reset );\r\n                $scope.lang.search          = $scope.translation.search;                \r\n                $scope.lang.nothingSelected = $sce.trustAsHtml( $scope.translation.nothingSelected );                \r\n            }\r\n            else {\r\n                $scope.lang.selectAll       = $sce.trustAsHtml( $scope.icon.selectAll  + '&nbsp;&nbsp;Select All' );                \r\n                $scope.lang.selectNone      = $sce.trustAsHtml( $scope.icon.selectNone + '&nbsp;&nbsp;Select None' );\r\n                $scope.lang.reset           = $sce.trustAsHtml( $scope.icon.reset      + '&nbsp;&nbsp;Reset' );\r\n                $scope.lang.search          = 'Search...';\r\n                $scope.lang.nothingSelected = 'None Selected';                \r\n            }\r\n            $scope.icon.tickMark = $sce.trustAsHtml( $scope.icon.tickMark );\r\n                \r\n            // min length of keyword to trigger the filter function\r\n            if ( typeof attrs.MinSearchLength !== 'undefined' && parseInt( attrs.MinSearchLength ) > 0 ) {\r\n                vMinSearchLength = Math.floor( parseInt( attrs.MinSearchLength ) );\r\n            }\r\n\r\n            /*******************************************************\r\n             *******************************************************\r\n             *\r\n             * 2) Logic starts here, initiated by watch 1 & watch 2\r\n             *\r\n             *******************************************************\r\n             *******************************************************/\r\n            \r\n            // watch1, for changes in input model property\r\n            // updates multi-select when user select/deselect a single checkbox programatically\r\n            // https://github.com/isteven/angular-multi-select/issues/8            \r\n            $scope.$watch( 'inputModel' , function( newVal ) {                                 \r\n                if ( newVal ) {                            \r\n                    $scope.refreshOutputModel();                                    \r\n                    $scope.refreshButton();                                                  \r\n                }\r\n            }, true );\r\n            \r\n            // watch2 for changes in input model as a whole\r\n            // this on updates the multi-select when a user load a whole new input-model. We also update the $scope.backUp variable\r\n            $scope.$watch( 'inputModel' , function( newVal ) {  \r\n                if ( newVal ) {\r\n                    $scope.backUp = angular.copy( $scope.inputModel );    \r\n                    $scope.updateFilter();\r\n                    $scope.prepareGrouping();\r\n                    $scope.prepareIndex();                                                              \r\n                    $scope.refreshOutputModel();                \r\n                    $scope.refreshButton();                                                                                                                 \r\n                }\r\n            });                        \r\n\r\n            // watch for changes in directive state (disabled or enabled)\r\n            $scope.$watch( 'isDisabled' , function( newVal ) {         \r\n                $scope.isDisabled = newVal;                               \r\n            });            \r\n            \r\n            // this is for touch enabled devices. We don't want to hide checkboxes on scroll. \r\n            var onTouchStart = function( e ) { \r\n            \t$scope.$apply( function() {\r\n            \t\t$scope.scrolled = false;\r\n            \t}); \r\n            };\r\n            angular.element( document ).bind( 'touchstart', onTouchStart);\r\n            var onTouchMove = function( e ) { \r\n            \t$scope.$apply( function() {\r\n            \t\t$scope.scrolled = true;                \r\n            \t});\r\n            };\r\n            angular.element( document ).bind( 'touchmove', onTouchMove);            \r\n\r\n            // unbind document events to prevent memory leaks\r\n            $scope.$on( '$destroy', function () {\r\n\t\t\t    angular.element( document ).unbind( 'touchstart', onTouchStart);\r\n            \tangular.element( document ).unbind( 'touchmove', onTouchMove);\r\n            });\r\n        }\r\n    }\r\n}]).run( [ '$templateCache' , function( $templateCache ) {\r\n    var template = \r\n        '<span class=\"multiSelect inlineBlock\">' +\r\n            // main button\r\n            '<button id=\"{{directiveId}}\" type=\"button\"' +                \r\n                'ng-click=\"toggleCheckboxes( $event ); refreshSelectedItems(); refreshButton(); prepareGrouping; prepareIndex();\"' +\r\n                'ng-bind-html=\"varButtonLabel\"' +\r\n                'ng-disabled=\"disable-button\"' +\r\n            '>' +\r\n            '</button>' +\r\n            // overlay layer\r\n            '<div class=\"checkboxLayer\">' +\r\n                // container of the helper elements\r\n                '<div class=\"helperContainer\" ng-if=\"helperStatus.filter || helperStatus.all || helperStatus.none || helperStatus.reset \">' +\r\n                    // container of the first 3 buttons, select all, none and reset\r\n                    '<div class=\"line\" ng-if=\"helperStatus.all || helperStatus.none || helperStatus.reset \">' +\r\n                        // select all\r\n                        '<button type=\"button\" class=\"helperButton\"' +\r\n                            'ng-disabled=\"isDisabled\"' + \r\n                            'ng-if=\"helperStatus.all\"' +\r\n                            'ng-click=\"select( \\'all\\', $event );\"' +\r\n                            'ng-bind-html=\"lang.selectAll\">' +\r\n                        '</button>'+\r\n                        // select none\r\n                        '<button type=\"button\" class=\"helperButton\"' +\r\n                            'ng-disabled=\"isDisabled\"' + \r\n                            'ng-if=\"helperStatus.none\"' +\r\n                            'ng-click=\"select( \\'none\\', $event );\"' +\r\n                            'ng-bind-html=\"lang.selectNone\">' +\r\n                        '</button>'+\r\n                        // reset\r\n                        '<button type=\"button\" class=\"helperButton reset\"' +\r\n                            'ng-disabled=\"isDisabled\"' + \r\n                            'ng-if=\"helperStatus.reset\"' +\r\n                            'ng-click=\"select( \\'reset\\', $event );\"' +\r\n                            'ng-bind-html=\"lang.reset\">'+\r\n                        '</button>' +\r\n                    '</div>' +\r\n                    // the search box\r\n                    '<div class=\"line\" style=\"position:relative\" ng-if=\"helperStatus.filter\">'+\r\n                        // textfield                \r\n                        '<input placeholder=\"{{lang.search}}\" type=\"text\"' +\r\n                            'ng-click=\"select( \\'filter\\', $event )\" '+\r\n                            'ng-model=\"inputLabel.labelFilter\" '+\r\n                            'ng-change=\"searchChanged()\" class=\"inputFilter\"'+\r\n                            '/>'+\r\n                        // clear button\r\n                        '<button type=\"button\" class=\"clearButton\" ng-click=\"clearClicked( $event )\" >×</button> '+\r\n                    '</div> '+\r\n                '</div> '+\r\n                // selection items\r\n                '<div class=\"checkBoxContainer\">'+\r\n                    '<div '+\r\n                        'ng-repeat=\"item in filteredModel | filter:removeGroupEndMarker\" class=\"multiSelectItem\"'+\r\n                        'ng-class=\"{selected: item[ tickProperty ], horizontal: orientationH, vertical: orientationV, multiSelectGroup:item[ groupProperty ], disabled:itemIsDisabled( item )}\"'+\r\n                        'ng-click=\"syncItems( item, $event, $index );\" '+\r\n                        'ng-mouseleave=\"removeFocusStyle( tabIndex );\"> '+\r\n                        // this is the spacing for grouped items\r\n                        '<div class=\"acol\" ng-if=\"item[ spacingProperty ] > 0\" ng-repeat=\"i in numberToArray( item[ spacingProperty ] ) track by $index\">'+                        \r\n                    '</div>  '+        \r\n                    '<div class=\"acol\">'+\r\n                        '<label>'+                                \r\n                            // input, so that it can accept focus on keyboard click\r\n                            '<input class=\"checkbox focusable\" type=\"checkbox\" '+\r\n                                'ng-disabled=\"itemIsDisabled( item )\" '+\r\n                                'ng-checked=\"item[ tickProperty ]\" '+\r\n                                'ng-click=\"syncItems( item, $event, $index )\" />'+\r\n                            // item label using ng-bind-hteml\r\n                            '<span '+\r\n                                'ng-class=\"{disabled:itemIsDisabled( item )}\" '+\r\n                                'ng-bind-html=\"writeLabel( item, \\'itemLabel\\' )\">'+\r\n                            '</span>'+\r\n                        '</label>'+\r\n                    '</div>'+\r\n                    // the tick/check mark\r\n                    '<span class=\"tickMark\" ng-if=\"item[ groupProperty ] !== true && item[ tickProperty ] === true\" ng-bind-html=\"icon.tickMark\"></span>'+\r\n                '</div>'+\r\n            '</div>'+\r\n        '</div>'+\r\n    '</span>';\r\n\t$templateCache.put( 'isteven-multi-select.htm' , template );\r\n}]); "]}