{"version":3,"sources":["../../src/js/constants.js"],"names":["DefaultFlags","Included","Excluded","Order","Normal","BadData","SuspectData","OverRangeError","UnderRangeError","AlarmHigh","AlarmLow","WarningHigh","WarningLow","FlatlineAlarm","ComparisonAlarm","ROCAlarm","ReceivedAsBad","CalculatedValue","CalculationError","CalculationWarning","ReservedQualityFlag","BadTime","SuspectTime","LateTimeAlarm","FutureTimeAlarm","UpSampled","DownSampled","DiscardedValue","ReservedTimeFlag","UserDefinedFlag1","UserDefinedFlag2","UserDefinedFlag3","UserDefinedFlag4","UserDefinedFlag5","SystemError","SystemWarning","MeasurementError","MeasurementStateFlags","Math","pow","FunctionList","Set","Function","Parameters","Slice","Default","Type","Description","Average","Minimum","Maximum","Total","Range","Count","Distinct","AbsoluteValute","Add","Subtract","Multiply","Divide","Round","Floor","Ceiling","Truncate","StandardDeviation","Median","Mode","Top","Bottom","Random","First","Last","Percentile","Difference","TimeDifference","Derivative","TimeIntegration","Interval","IncludeRange","ExcludeRange","FilterNaN","UnwrapAngle","WrapAngle","Label","WhereOperators","Booleans","AngleUnits","TimeUnits"],"mappings":"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","file":"constants.js","sourcesContent":["﻿//******************************************************************************************************\r\n//  constants.js - Gbtc\r\n//\r\n//  Copyright © 2017, Grid Protection Alliance.  All Rights Reserved.\r\n//\r\n//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See\r\n//  the NOTICE file distributed with this work for additional information regarding copyright ownership.\r\n//  The GPA licenses this file to you under the MIT License (MIT), the \"License\"; you may not use this\r\n//  file except in compliance with the License. You may obtain a copy of the License at:\r\n//\r\n//      http://opensource.org/licenses/MIT\r\n//\r\n//  Unless agreed to in writing, the subject software distributed under the License is distributed on an\r\n//  \"AS-IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the\r\n//  License for the specific language governing permissions and limitations.\r\n//\r\n//  Code Modification History:\r\n//  ----------------------------------------------------------------------------------------------------\r\n//  11/01/2017 - Billy Ernest\r\n//       Generated original version of source code.\r\n//\r\n//******************************************************************************************************\r\n\r\n// #region Constants\r\nexport const DefaultFlags = {\n    'Select All': { Included: true, Excluded: false, Order: -1 },\n    Normal: { Included: true, Excluded: false, Order: 0 },\n    BadData: { Included: true, Excluded: false, Order: 1 },\n    SuspectData: { Included: true, Excluded: false, Order: 2 },\n    OverRangeError: { Included: true, Excluded: false, Order: 3 },\n    UnderRangeError: { Included: true, Excluded: false, Order: 4 },\n    AlarmHigh: { Included: true, Excluded: false, Order: 5 },\n    AlarmLow: { Included: true, Excluded: false, Order: 6 },\n    WarningHigh: { Included: true, Excluded: false, Order: 7 },\n    WarningLow: { Included: true, Excluded: false, Order: 8 },\n    FlatlineAlarm: { Included: true, Excluded: false, Order: 9 },\n    ComparisonAlarm: { Included: true, Excluded: false, Order: 10 },\n    ROCAlarm: { Included: true, Excluded: false, Order: 11 },\n    ReceivedAsBad: { Included: true, Excluded: false, Order: 12 },\n    CalculatedValue: { Included: true, Excluded: false, Order: 13 },\n    CalculationError: { Included: true, Excluded: false, Order: 14 },\n    CalculationWarning: { Included: true, Excluded: false, Order: 15 },\n    ReservedQualityFlag: { Included: true, Excluded: false, Order: 16 },\n    BadTime: { Included: true, Excluded: false, Order: 17 },\n    SuspectTime: { Included: true, Excluded: false, Order: 18 },\n    LateTimeAlarm: { Included: true, Excluded: false, Order: 19 },\n    FutureTimeAlarm: { Included: true, Excluded: false, Order: 20 },\n    UpSampled: { Included: true, Excluded: false, Order: 21 },\n    DownSampled: { Included: true, Excluded: false, Order: 22 },\n    DiscardedValue: { Included: true, Excluded: false, Order: 23 },\n    ReservedTimeFlag: { Included: true, Excluded: false, Order: 24 },\n    UserDefinedFlag1: { Included: true, Excluded: false, Order: 25 },\n    UserDefinedFlag2: { Included: true, Excluded: false, Order: 26 },\n    UserDefinedFlag3: { Included: true, Excluded: false, Order: 27 },\n    UserDefinedFlag4: { Included: true, Excluded: false, Order: 28 },\n    UserDefinedFlag5: { Included: true, Excluded: false, Order: 29 },\n    SystemError: { Included: true, Excluded: false, Order: 30 },\n    SystemWarning: { Included: true, Excluded: false, Order: 31 },\n    MeasurementError: { Included: true, Excluded: false, Order: 32 }\n}\r\n\r\nexport const MeasurementStateFlags =\n{\n    Normal : 0,\n    BadData : Math.pow(2,0),\n    SuspectData : Math.pow(2,1),\n    OverRangeError : Math.pow(2,2),\n    UnderRangeError : Math.pow(2,3),\n    AlarmHigh : Math.pow(2,4),\n    AlarmLow : Math.pow(2,5),\n    WarningHigh : Math.pow(2,6),\n    WarningLow : Math.pow(2,7),\n    FlatlineAlarm : Math.pow(2,8),\n    ComparisonAlarm : Math.pow(2,9),\n    ROCAlarm : Math.pow(2,10),\n    ReceivedAsBad : Math.pow(2,11),\n    CalculatedValue : Math.pow(2,12),\n    CalculationError : Math.pow(2,13),\n    CalculationWarning : Math.pow(2,14),\n    ReservedQualityFlag : Math.pow(2,15),\n    BadTime : Math.pow(2,16),\n    SuspectTime : Math.pow(2,17),\n    LateTimeAlarm : Math.pow(2,18),\n    FutureTimeAlarm : Math.pow(2,19),\n    UpSampled : Math.pow(2,20),\n    DownSampled : Math.pow(2,21),\n    DiscardedValue : Math.pow(2,22),\n    ReservedTimeFlag : Math.pow(2,23),\n    UserDefinedFlag1 : Math.pow(2,24),\n    UserDefinedFlag2 : Math.pow(2,25),\n    UserDefinedFlag3 : Math.pow(2,26),\n    UserDefinedFlag4 : Math.pow(2,27),\n    UserDefinedFlag5 : Math.pow(2,28),\n    SystemError : Math.pow(2,29),\n    SystemWarning : Math.pow(2,30),\n    MeasurementError : Math.pow(2,31)\n}\n\nexport const FunctionList = {\r\n    Set: { Function: 'Set', Parameters: [] },\r\n    Slice: { Function: 'Slice', Parameters: [{ Default: 1, Type: 'double', Description: 'A floating-point value that must be greater than or equal to zero that represents the desired time tolerance, in seconds, for the time slice.' }] },\r\n    Average: { Function: 'Average', Parameters: [] },\r\n    Minimum: { Function: 'Minimum', Parameters: [] },\r\n    Maximum: { Function: 'Maximum', Parameters: [] },\r\n    Total: { Function: 'Total', Parameters: [] },\r\n    Range: { Function: 'Range', Parameters: [] },\r\n    Count: { Function: 'Count', Parameters: [] },\r\n    Distinct: { Function: 'Distinct', Parameters: [] },\r\n    AbsoluteValute: { Function: 'AbsoluteValue', Parameters: [] },\r\n    Add: { Function: 'Add', Parameters: [{ Default: 0, Type: 'string', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n    Subtract: { Function: 'Subtract', Parameters: [{ Default: 0, Type: 'string', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n    Multiply: { Function: 'Multiply', Parameters: [{ Default: 1, Type: 'string', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n    Divide: { Function: 'Multiply', Parameters: [{ Default: 1, Type: 'string', Description: 'A floating point value representing an additive offset to be applied to each value the source series.' }] },\r\n    Round: { Function: 'Round', Parameters: [{ Default: 0, Type: 'double', Description: 'A positive integer value representing the number of decimal places in the return value - defaults to 0.' }] },\r\n    Floor: { Function: 'Floor', Parameters: [] },\r\n    Ceiling: { Function: 'Ceiling', Parameters: [] },\r\n    Truncate: { Function: 'Truncate', Parameters: [] },\r\n    StandardDeviation: { Function: 'StandardDeviation', Parameters: [{ Default: false, Type: 'boolean', Description: 'A boolean flag representing if the sample based calculation should be used - defaults to false, which means the population based calculation should be used.' }] },\r\n    Median: { Function: 'Median', Parameters: [] },\r\n    Mode: { Function: 'Mode', Parameters: [] },\r\n    Top: { Function: 'Top', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n    Bottom: { Function: 'Bottom', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n    Random: { Function: 'Random', Parameters: [{ Default: '100%', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100.' }, { Default: true, Type: 'boolean', Description: 'A boolean flag representing if time in dataset should be normalized - defaults to true.' }] },\r\n    First: { Function: 'First', Parameters: [{ Default: '1', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.' }] },\r\n    Last: { Function: 'Last', Parameters: [{ Default: '1', Type: 'string', Description: 'A positive integer value, representing a total, that is greater than zero - or - a floating point value, suffixed with \\' %\\' representing a percentage, that must range from greater than 0 to less than or equal to 100 - defaults to 1.' }] },\r\n    Percentile: { Function: 'Percentile', Parameters: [{ Default: '100%', Type: 'string', Description: 'A floating point value, representing a percentage, that must range from 0 to 100.' }] },\r\n    Difference: { Function: 'Difference', Parameters: [] },\r\n    TimeDifference: { Function: 'TimeDifference', Parameters: [{ Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n    Derivative: { Function: 'Derivative', Parameters: [{ Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n    TimeIntegration: { Function: 'TimeIntegration', Parameters: [{ Default: 'Hours', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Hours.' }] },\r\n    Interval: { Function: 'Interval', Parameters: [{ Default: 0, Type: 'double', Description: 'A floating-point value that must be greater than or equal to zero that represents the desired time interval, in time units, for the returned data. ' }, { Default: 'Seconds', Type: 'time', Description: 'Specifies the type of time units and must be one of the following: Seconds, Nanoseconds, Microseconds, Milliseconds, Minutes, Hours, Days, Weeks, Ke (i.e., traditional Chinese unit of decimal time), Ticks (i.e., 100-nanosecond intervals), PlanckTime or AtomicUnitsOfTime - defaults to Seconds.' }] },\r\n    IncludeRange: { Function: 'IncludeRange', Parameters: [{ Default: 0, Type: 'double', Description: 'Floating-point number that represents the low range of values allowed in the return series.' }, { Default: 0, Type: 'double', Description: 'Floating-point number that represents the high range of values allowed in the return series.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag that determines if range values are inclusive, i.e., allowed values are >= low and <= high - defaults to false, which means values are exclusive, i.e., allowed values are > low and < high.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag - when four parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.' }] },\r\n    ExcludeRange: { Function: 'ExcludeRange', Parameters: [{ Default: 0, Type: 'double', Description: 'Floating-point number that represents the low range of values allowed in the return series.' }, { Default: 0, Type: 'double', Description: 'Floating-point number that represents the high range of values allowed in the return series.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag that determines if range values are inclusive, i.e., allowed values are >= low and <= high - defaults to false, which means values are exclusive, i.e., allowed values are > low and < high.' }, { Default: false, Type: 'boolean', Description: 'A boolean flag - when four parameters are provided, third parameter determines if low value is inclusive and forth parameter determines if high value is inclusive.' }] },\r\n    FilterNaN: { Function: 'FilterNaN', Parameters: [{ Default: true, Type: 'boolean', Description: 'A boolean flag that determines if infinite values should also be excluded - defaults to true.' }] },\r\n    UnwrapAngle: { Function: 'UnwrapAngle', Parameters: [{ Default: 'Degrees', Type: 'angleUnits', Description: 'Specifies the type of angle units and must be one of the following: Degrees, Radians, Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.' }] },\r\n    WrapAngle: { Function: 'WrapAngle', Parameters: [{ Default: 'Degrees', Type: 'angleUnits', Description: 'Specifies the type of angle units and must be one of the following: Degrees, Radians, Grads, ArcMinutes, ArcSeconds or AngularMil - defaults to Degrees.' }] },\r\n    Label: { Function: 'Label', Parameters: [{ Default: 'Name', Type: 'string', Description: 'Renames a series with the specified label value.' }] },\r\n};\r\n\nexport const WhereOperators = ['=', '<>', '<', '<=', '>', '>=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN', 'IS', 'IS NOT'];\n\nexport const Booleans = ['true', 'false'];\n\nexport const AngleUnits = ['Degrees', 'Radians', 'Grads', 'ArcMinutes', 'ArcSeconds', 'AngularMil']\n\nexport const TimeUnits = ['Weeks', 'Days', 'Hours', 'Minutes', 'Seconds', 'Milliseconds', 'Microseconds', 'Nanoseconds', 'Ticks', 'PlankTime', 'AtomicUnitsOfTime', 'Ke']\n// #endregion\n"]}